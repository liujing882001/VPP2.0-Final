{"version":3,"file":"static/js/64.d11f8e5f.chunk.js","mappings":"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","sources":["views/Forecasting/Spotforecast/utils/index.js","views/Forecasting/Spotforecast/component/report-modal/index.js","views/Forecasting/Spotforecast/component/modal/index.js","views/Forecasting/Spotforecast/component/strategy-modal/index.js","views/Forecasting/Spotforecast/component/chart01/index.js","views/Forecasting/Spotforecast/component/chart02/index.js","views/Forecasting/Spotforecast/component/chart03/index.js","views/Forecasting/Spotforecast/index.js"],"sourcesContent":["export const mapStrategyName = (key) => {\r\n    const obj = {\r\n        '3da72e052a0b48759b0f4633df42235a': '深圳某工业设备新材料股份有限公司',\r\n        '176c0991f24e30c2b25a9dbf1185b7b9': '深圳泰伦广场A座',\r\n        '5eb413037ba16ea6108c12e0d6353be3': '深圳泰伦广场B座'\r\n    }\r\n    return obj[key]\r\n}\r\n\r\n\r\nexport const formatDate = (objDate) => {\r\n    const timestamp = new Date(objDate);\r\n    const year = timestamp.getFullYear();\r\n    const month = (timestamp.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 because getMonth() returns zero-based month\r\n    const day = timestamp.getDate().toString().padStart(2, '0');\r\n    const hours = timestamp.getHours().toString().padStart(2, '0');\r\n    const minutes = timestamp.getMinutes().toString().padStart(2, '0');\r\n    const formattedDate = `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    return formattedDate;\r\n}\r\n\r\n\r\nexport const isTimeDifferenceTwoHours = (timeStr1, timeStr2) => {\r\n    const date1 = new Date(timeStr1);\r\n    const date2 = new Date(timeStr2);\r\n    const diff = Math.abs(date2.getTime() - date1.getTime());\r\n    return diff > 2 * 60 * 60 * 1000; // 2 hours in milliseconds\r\n}\r\n\r\nexport const renderResponseType = (type) => {\r\n    if (type === 1) {\r\n        return '削峰响应'\r\n    } else if (type === 2) {\r\n        return '填谷响应'\r\n    } else {\r\n        return '-'\r\n    }\r\n}\r\n\r\nexport const renderResponseLevel = (type) => {\r\n    if (type === 1) {\r\n        return '日前响应'\r\n    } else if (type === 2) {\r\n        return '小时响应'\r\n    } else if (type === 3) {\r\n        return '分钟响应'\r\n    } else if (type === 4) {\r\n        return '秒级响应'\r\n    }\r\n}\r\n\r\nexport const renderResponseStatus = (dstatus, declareStatus) => {\r\n    if(!declareStatus){\r\n        if(dstatus === 1){\r\n            return '待申报'\r\n        }\r\n        if(dstatus === 2){\r\n            return '执行中'\r\n        }\r\n        if(dstatus === 3){\r\n            return '已完成'\r\n        }\r\n        if(dstatus === 4 || dstatus === 0){\r\n            return '不参加'\r\n        }\r\n    }\r\n\r\n    if(!dstatus){\r\n        if(declareStatus === 1){\r\n            return '待申报'\r\n        }\r\n        if(declareStatus === 2){\r\n            return '待出清'\r\n        }\r\n        if(declareStatus === 3){\r\n            return '已出清'\r\n        }  \r\n    }\r\n\r\n    if(declareStatus){\r\n        if(declareStatus === 1 && dstatus === 1){\r\n            return '待申报'\r\n        }\r\n        if(declareStatus === 2 && dstatus === 1){\r\n            return '待出清'\r\n        }\r\n        if(declareStatus === 3 && dstatus === 1){\r\n            return '已出清'\r\n        }\r\n        if(declareStatus === 3 && dstatus === 2){\r\n            return '执行中'\r\n        }\r\n        if(declareStatus === 3 && dstatus === 3){\r\n            return '已完成'\r\n        }\r\n        if(dstatus === 4 || dstatus === 0){\r\n            return '不参加'\r\n        }\r\n    }\r\n    \r\n    return '不参加'\r\n}\r\n\r\nexport const renderNodeStatus = (status) => {\r\n    switch (status) {\r\n        case 11:\r\n            return '待申报'\r\n        case 12:\r\n            return '待申报'\r\n        case 15:\r\n            return '不参加'\r\n        case 21:\r\n            return '待出清'\r\n        case 22:\r\n            return '已出清'\r\n        case 24:\r\n            return '执行中'\r\n        case 25:\r\n            return '已完成'\r\n        default:\r\n            return '-'\r\n    }\r\n\r\n}\r\n\r\n\r\n// 示例用法\r\n\r\nexport const calcEndDate = (date) => {\r\n    const timestamp = new Date(date);\r\n    const year = timestamp.getFullYear();\r\n    const month = (timestamp.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 because getMonth() returns zero-based month\r\n    const day = timestamp.getDate().toString().padStart(2, '0');\r\n    let hours = ''\r\n    let minutes = ''\r\n    if (Number(timestamp.getHours().toString()) >= 22) {\r\n        hours = '23'\r\n        minutes = '45'\r\n    } else {\r\n        hours = (Number(timestamp.getHours().toString()) + 2).toString().padStart(2, '0');\r\n        minutes = timestamp.getMinutes().toString().padStart(2, '0');\r\n    }\r\n    return {\r\n        startTime: date.split(' ')[1],\r\n        endDate: `${year}-${month}-${day}`,\r\n        endTime: `${hours}:${minutes}`\r\n    }\r\n}   \r\n\r\n\r\nexport const calcNum = (num) => {\r\n    if(isNaN(num)){\r\n        return 0\r\n    }\r\n    return num ? Math.round(num*100) / 100 : 0\r\n}","\r\nimport { Button, Modal,DatePicker,Input,Radio } from 'antd';\r\nimport './index.scss'\r\nimport dayjs from 'dayjs';\r\n\r\nconst { RangePicker } = DatePicker\r\nconst {Search} = Input\r\nconst ReportModal = (props) => {\r\n    const { setIsTipsModalOpen,isTipsModalOpen } = props || {}\r\n    const dateFormat = 'YYYY/MM/DD';\r\n    const onChange = (date, dateString) => {\r\n        console.log(date, dateString);\r\n      };\r\n    const handleCancel = () => {\r\n      setIsTipsModalOpen(false);\r\n    };\r\n\r\n    const onChange1 = (e) => {\r\n        console.log('radio checked', e.target.value);\r\n    };\r\n    return (\r\n        <Modal className=\"report-modal\" visible={isTipsModalOpen} footer={null} title=\"提示\" onCancel={handleCancel}>\r\n           <p className='tips-content'>是否确认按当前的申报负荷进行申报？</p>\r\n           <div className='btn-wrapper'>\r\n                <Button className='cancel-btn' onClick={handleCancel}>\r\n                    取消\r\n                </Button>\r\n                <Button className='ok-btn' onClick={handleCancel}>\r\n                    确定\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\nexport default ReportModal;","\r\nimport { Button, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { renderNodeStatus,renderResponseType,renderResponseLevel } from '../../utils'\r\nimport classNames from 'classnames'\r\nimport './index.scss'\r\nimport ReportModal from '../report-modal'\r\nconst CommonModal = (props) => {\r\n    const { isModalOpen,setIsModalOpen,taskInfo,nodeList } = props || {}\r\n    const [isTipsModalOpen, setIsTipsModalOpen] = useState(false);\r\n\r\n    const handleCancel = () => {\r\n      setIsModalOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal className=\"expand-modal\" visible={isModalOpen} footer={null} closable={false}>\r\n                <i className='close-icon' onClick={() => handleCancel()}/>\r\n                <div className='spot-forecast_content_right_content'>\r\n                    <div className='spot-forecast-right-top'>\r\n                        <div className='right-img'></div>\r\n                        <span className='right-text'>需求响应平台</span>\r\n                    </div>\r\n                    <div className='spot-forecast-right-center'>\r\n                        <div className='center-img-top'></div>\r\n                        <div className='model-wrap'>\r\n                            <div className='modal-img'></div>\r\n                            <span className='model-text'>能源大模型</span>\r\n                        </div>\r\n                     \r\n                    </div>\r\n                    <div className='spot-forecast-right-bottom'>\r\n                        <div className='arrow-bottom'></div>\r\n                    </div>\r\n                    <div className='left-text-wrap'>\r\n                        <p className='left-text'>响应时段：{taskInfo?.rsDate}</p>\r\n                        <p className='left-text'>负荷需求(kW)：{taskInfo?.respLoad}kW</p>\r\n                        <p className='left-text'>响应类型：{renderResponseType(taskInfo?.respType)}</p>\r\n                        <p className='left-text'>响应级别：{renderResponseLevel(taskInfo?.respLevel)}</p>\r\n                    </div>\r\n                    <div className='right-text-wrap'>\r\n                        <p className='other-right-text'>需求响应状态：{111}</p>\r\n                        <p className='other-right-text'>申报负荷(kW)：{taskInfo?.declareLoad}kW</p>\r\n                        <p className='other-right-text'>调节负荷(kW)：{taskInfo?.adjustLoad}kW</p>\r\n                        <p className='other-right-text'>预测负荷(kW)：{taskInfo?.forecastLoad}kW</p>\r\n                    </div>\r\n                </div>  \r\n                <div className='dots-wrapper'>\r\n                    {\r\n                        nodeList?.map((item,i) => {\r\n                            return (\r\n                                <div className='dots-1' key={i}>\r\n                                    <div className='dots-1-header'>\r\n                                        <div className={classNames('round',{'online-status':item?.online})}></div>\r\n                                        <span className='dots-1-header-text'>{item?.nodeName}</span>\r\n                                    </div>\r\n                                    <div className='dots1-content'>\r\n                                        <p className='dots1-text'>状态：{renderNodeStatus(item?.drsStatus) || '-'}</p>\r\n                                        <p className='dots1-text'>申报负荷(kW)：{item?.declareLoad}kW</p>\r\n                                        <p className='dots1-text'>调节负荷(kW)：{item?.adjustLoad}kW</p>\r\n                                        <p className='dots1-text'>预测负荷(kW)：{item?.forecastLoad}kW</p>\r\n                                        <p className='dots1-text'>响应负荷(kW)：{item?.deviceRatedLoad}kW</p>\r\n                                        <p className='dots1-text'>响应电量(kW)：{item?.reality}kW</p>\r\n                                        <p className='dots1-text'>预估收益（元）：{item?.income}元</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n        \r\n                </div>\r\n            </Modal>\r\n            <ReportModal isTipsModalOpen={isTipsModalOpen} setIsTipsModalOpen={setIsTipsModalOpen}/>\r\n        </>\r\n    );\r\n  };\r\nexport default CommonModal;\r\n\r\n\r\n","\r\nimport { Button, Modal, DatePicker,Input,Radio,message,Tooltip } from 'antd';\r\nimport axios from 'axios'\r\nimport './index.scss'\r\nimport { useEffect, useState } from 'react';\r\nimport { formatDate } from  '../../utils'\r\nimport http from '../../../../../server/server';\r\nconst StrategyModal = (props) => {\r\n    const {setIsStrategyModalOpen,selectedStrategyItem,queryStrategy } = props || {}\r\n    const { id,nodeName,noHouseholds,time,deviceName,content } = selectedStrategyItem || {}\r\n    const [temperature,setTemperature] = useState( content ? content?.substring(4,content?.length-1) : null)\r\n    const handleCancel = () => {\r\n        setTemperature(content ? content?.substring(4,content?.length) :\"\")\r\n        setIsStrategyModalOpen(false);\r\n    };\r\n\r\n    const onOK = () => {\r\n        if(temperature > 20 || temperature < 14){\r\n            message.error('出水温度只能在14到20之前');\r\n            return\r\n        }\r\n        http.post(\"AIEnergy/strategyUpdate\", {\r\n            id,\r\n            strategyContent:temperature\r\n        }, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          })\r\n        .then(function (response) {\r\n            message.success('修改成功');\r\n            handleCancel()\r\n            queryStrategy()\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误strategyUpdate`)\r\n        });\r\n    }\r\n\r\n    \r\n    return (\r\n        <Modal className=\"strategy-modal\" visible={true} footer={null} title=\"冷机出水温度调节\" onCancel={handleCancel}>\r\n            <div className='strategy-modal-content'>\r\n                <div className='strategy-modal-content-left'>\r\n                    <p className='strategy-modal-content-left-item'>节点</p>\r\n                    <p className='strategy-modal-content-left-item'>户号</p>\r\n                    <p className='strategy-modal-content-left-item'>时间点</p>\r\n                    <p className='strategy-modal-content-left-item'>控制设备</p>\r\n                    <p className='strategy-modal-content-left-item'>出水温度</p>\r\n                </div>\r\n                <div className='strategy-modal-content-right'>\r\n                    <p className='strategy-modal-content-right-item'>{nodeName}</p>\r\n                    <p className='strategy-modal-content-right-item'>{noHouseholds}</p>\r\n                    <p className='strategy-modal-content-right-item'>{formatDate(time)}</p>\r\n                    <Tooltip placement=\"top\" title={deviceName?.join(',')} color='#38373F'>\r\n                        <span className='strategy-modal-content-right-item'>{deviceName?.join(',')}</span>\r\n                    </Tooltip>\r\n                    <p className='strategy-modal-content-right-item'> \r\n                        <Input\r\n                            value={temperature}\r\n                            className='temperature-input'\r\n                            onChange={(e) => {\r\n                                setTemperature(e.target.value)\r\n                            }}\r\n                            style={{width:'65px',height:'32px'}}\r\n                        />\r\n                        <span className='temperature-icon'>°C</span>\r\n                        <span className='rang-text'>（范围限制：14°C-20°C）</span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className='btn-wrapper'>\r\n                <Button className='cancel-btn' onClick={handleCancel}>\r\n                    取消\r\n                </Button>\r\n                <Button className='ok-btn' onClick={onOK}>\r\n                    确定\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n  };\r\n  export default StrategyModal;","import React, { useEffect } from 'react';\r\nimport * as echarts from 'echarts';\r\n// import echarts  from '../../../../echarts.js'\r\nimport 'echarts-gl';\r\nimport './index.scss'\r\nconst Chart01 = (props) => {\r\n  const { timerList,baselineList,predictionList } = props || {}\r\n  const init = () => {\r\n    var chartDom = document.getElementById('main-01');\r\n    var myChart = echarts.init(chartDom);\r\n    var option;\r\n    var series = [];\r\n\r\n    const data = [\r\n      {\r\n        adjust:false,\r\n        value: [0,40,120]\r\n      },\r\n      {\r\n        adjust:true,\r\n        value: [[1,10,100],[1,20,100]]\r\n      },\r\n      {\r\n        adjust:false,\r\n        value: [2,20,110]\r\n      }\r\n    ]\r\n\r\n    const formdata = [\r\n      \r\n    ]\r\n\r\n    for(let i = 0;i < data.length;i++){\r\n        if(data[i].adjust){\r\n          const item = data[i].value\r\n\r\n          let arr1 = JSON.parse(JSON.stringify(item[0]))\r\n          let arr2 = JSON.parse(JSON.stringify(item[1]))\r\n          for(let i = 1;i <= arr1[1];i++){\r\n            formdata.push({\r\n              value:[arr1[0],i,arr1[2]],\r\n              itemStyle: {\r\n                  color:'#3370FF'\r\n              }\r\n            })\r\n          }\r\n          for(let i = arr1[1];i <= arr1[1]+arr2[1];i++){\r\n            formdata.push({\r\n               value:[arr2[0],i,arr2[2]],\r\n              itemStyle: {\r\n                  color:'#44D7B6'\r\n              }\r\n            })\r\n          }\r\n        }else{\r\n          const item = data[i]\r\n          for(let i = 1;i <= item.value[1];i++){\r\n            formdata.push({\r\n              value:[item.value[0],i,item.value[2]],\r\n              itemStyle: {\r\n                color:'#B1CBE2'\r\n              }\r\n            })\r\n          }\r\n        }\r\n    }\r\n\r\n    function formatterHover(params) {\r\n      const { dataIndex } = params\r\n      const timer = timerList[dataIndex].value\r\n      const add =[]\r\n      const redLine = baselineList[dataIndex][2]\r\n      const prediction = predictionList[dataIndex].value[2]\r\n\r\n      const dataString =  \r\n         `<div style=\"padding-left:5px;height:30px;line-height:30px;color:#fff;font-size:14px\">${timer}</div>`\r\n              +\r\n\r\n              `<div style=\"display:flex;color:#fff\">\r\n                  <div style=\"display:flex;align-items:center;margin-right:125px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#C9E3FE;border-radius:6px;margin-right:6px\"></span>预测负荷(kW)</div>\r\n                  <span style=\"\">${prediction}</span>\r\n              </div>`\r\n       \r\n              +\r\n\r\n              `<div style=\"display:flex;color:#fff\">\r\n                  <div style=\"display:flex;align-items:center;margin-right:124px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#E02020;border-radius:6px;margin-right:6px\"></span>基线负荷(kW)</div>\r\n                  <span style=\"\">${redLine}</span>\r\n          </div>`\r\n      return dataString\r\n  }\r\n\r\n    // series.push({\r\n    //     stack: true,\r\n    //     shading: 'realistic',\r\n    //     emphasis: {\r\n    //         label: {\r\n    //             show: false\r\n    //         }\r\n    //     },\r\n    //     type: 'bar3D',\r\n    //     barSize: [10, 1, 10],\r\n    //     data: formdata\r\n    // });\r\n\r\n  //   series.push({\r\n  //     stack: true,\r\n  //     shading: 'lambert',\r\n  //     emphasis: {\r\n  //         label: {\r\n  //             show: false\r\n  //         }\r\n  //     },\r\n  //     type: 'bar3D',\r\n  //     barSize: [10, 10, 10],\r\n  //     data: [[0,0,5],[1,1,0],[2,1,20],[3,1,0],[4,1,0]]\r\n  // });\r\n\r\n\r\n\r\n    var option;\r\n    option = {\r\n        xAxis3D: {\r\n            name: '',\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:12\r\n            },\r\n            type: 'category',\r\n            data: [0,1,2,3,4],\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        yAxis3D: {\r\n            name: '',\r\n            nameGap:30,\r\n            type: 'value',\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            minInterval:0,\r\n            interval:50,            \r\n            axisLabel:{\r\n                interval:5  ,\r\n            }\r\n        },\r\n        zAxis3D: {\r\n            name: '功率(kW)',\r\n            type: 'value',\r\n            nameGap:30,\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:12\r\n            },\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        grid3D: {\r\n          boxDepth: 100,\r\n          boxHeight: 40,\r\n          light: {\r\n          main: {\r\n              intensity: 1.2,\r\n              shadow: true\r\n          },\r\n          ambient: {\r\n              intensity: 0.3\r\n          }\r\n          },\r\n          light: {\r\n            main: {\r\n              intensity: 1.2\r\n            },\r\n            ambient: {\r\n              intensity: 0.3\r\n            }\r\n          }\r\n        },\r\n        series: [...series]\r\n    };\r\n\r\n    option && myChart.setOption(option);\r\n  }\r\n\r\n  useEffect(() => {\r\n    init()\r\n  },[timerList,baselineList,predictionList])\r\n\r\n  \r\n  return <div id='main-01' style={{width:'580px',height:'220px'}}></div>\r\n};\r\n\r\nexport default Chart01;\r\n","import React, { useEffect } from 'react';\r\nimport * as echarts from 'echarts';\r\n// import echarts  from '../../../../echarts.js'\r\nimport 'echarts-gl';\r\nimport './index.scss'\r\nconst Chart02 = (props) => {\r\n  const { timerList,baselineList,predictionList } = props || {}\r\n  const init = () => {\r\n    var chartDom = document.getElementById('main-02');\r\n    var myChart = echarts.init(chartDom);\r\n    var option;\r\n    var series = [];\r\n\r\n    const data = [\r\n      {\r\n        adjust:false,     \r\n        value: [0,10,400]\r\n      },\r\n      {\r\n        adjust:true,\r\n        value: [[1,50,500],[1,40,500]]\r\n      },\r\n      {\r\n        adjust:false,\r\n        value: [2,20,400]\r\n      }\r\n    ]\r\n\r\n    const formdata = []\r\n\r\n    for(let i = 0;i < data.length;i++){\r\n        if(data[i].adjust){\r\n          const item = data[i].value\r\n\r\n          let arr1 = item[0]\r\n          let arr2 = item[1]\r\n          for(let i = 1;i <= arr1[1];i++){\r\n            formdata.push({\r\n              value:[arr1[0],i,arr1[2]],\r\n              itemStyle: {\r\n                  color:'#3370FF'\r\n              }\r\n            })\r\n          }\r\n          for(let i = arr1[1];i <= arr1[1]+arr2[1];i++){\r\n            formdata.push({\r\n               value:[arr2[0],i,arr2[2]],\r\n              itemStyle: {\r\n                  color:'#44D7B6'\r\n              }\r\n            })\r\n          }\r\n        }else{\r\n          const item = data[i]\r\n          for(let i = 1;i <= item.value[1];i++){\r\n            formdata.push({\r\n              value:[item.value[0],i,item.value[2]],\r\n              itemStyle: {\r\n                color:'#B1CBE2'\r\n              }\r\n            })\r\n          }\r\n        }\r\n    }\r\n\r\n    function formatterHover(params) {\r\n      // const { dataIndex } = params\r\n      const arr = params.data.value\r\n      const i = arr[0]\r\n      const adjust = data[i].adjust\r\n      let normal = ''\r\n      let special1 = ''\r\n      let special2 = ''\r\n      if(!adjust){\r\n        normal = data[i].value[1]\r\n      }else{\r\n        data[i].value.forEach((item,i)=> {\r\n          if(i === 0){\r\n            special1 = item[1]\r\n          }else{\r\n            special2 = item[1]\r\n          }\r\n        })\r\n      }\r\n      if(adjust){\r\n        const dataString =  \r\n        `<div style=\"padding-left:5px;height:30px;line-height:30px;color:#fff;font-size:14px\"></div>`\r\n             +\r\n\r\n             `<div style=\"display:flex;color:#fff\">\r\n                 <div style=\"display:flex;align-items:center;margin-right:125px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#C9E3FE;border-radius:6px;margin-right:6px\"></span>时间：</div>\r\n                 <span style=\"\">${arr[0]}</span>\r\n             </div>`\r\n      \r\n             +\r\n\r\n             `<div style=\"display:flex;color:#fff\">\r\n               <div style=\"display:flex;align-items:center;margin-right:125px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#C9E3FE;border-radius:6px;margin-right:6px\"></span>价格：</div>\r\n               <span style=\"\">${arr[2]}</span>\r\n             </div>`\r\n\r\n             +\r\n\r\n             `<div style=\"display:flex;color:#fff\">\r\n                 <div style=\"display:flex;align-items:center;margin-right:124px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#E02020;border-radius:6px;margin-right:6px\"></span>功率(kW)：</div>\r\n                 <span style=\"\">${special1}</span>\r\n             </div>`\r\n             +\r\n\r\n             `<div style=\"display:flex;color:#fff\">\r\n                 <div style=\"display:flex;align-items:center;margin-right:124px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#E02020;border-radius:6px;margin-right:6px\"></span>功率(kW)：</div>\r\n                 <span style=\"\">${special2}</span>\r\n             </div>`\r\n        return dataString\r\n      }else{\r\n        const dataString =  \r\n        `<div style=\"padding-left:5px;height:30px;line-height:30px;color:#fff;font-size:14px\"></div>`\r\n             +\r\n\r\n             `<div style=\"display:flex;color:#fff\">\r\n                 <div style=\"display:flex;align-items:center;margin-right:125px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#C9E3FE;border-radius:6px;margin-right:6px\"></span>时间：</div>\r\n                 <span style=\"\">${arr[0]}</span>\r\n             </div>`\r\n      \r\n             +\r\n\r\n             `<div style=\"display:flex;color:#fff\">\r\n               <div style=\"display:flex;align-items:center;margin-right:125px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#C9E3FE;border-radius:6px;margin-right:6px\"></span>价格：</div>\r\n               <span style=\"\">${arr[2]}</span>\r\n             </div>`\r\n\r\n             +\r\n\r\n             `<div style=\"display:flex;color:#fff\">\r\n                 <div style=\"display:flex;align-items:center;margin-right:124px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#E02020;border-radius:6px;margin-right:6px\"></span>功率(kW)：</div>\r\n                 <span style=\"\">${normal}</span>\r\n             </div>`\r\n        return dataString\r\n      }\r\n     \r\n  }\r\n\r\n\r\n   \r\n\r\n    console.log(formdata,'formdata')\r\n\r\n    series.push({\r\n        stack: true,\r\n        shading: 'lambert',\r\n        emphasis: {\r\n            label: {\r\n                show: false\r\n            }\r\n        },\r\n        type: 'bar3D',\r\n        barSize: [10, 1, 10],\r\n        data: formdata\r\n    });\r\n\r\n  //   series.push({\r\n  //     stack: true,\r\n  //     shading: 'lambert',\r\n  //     emphasis: {\r\n  //         label: {\r\n  //             show: false\r\n  //         }\r\n  //     },\r\n  //     type: 'bar3D',\r\n  //     barSize: [10, 10, 10],\r\n  //     data: [[0,0,5],[1,1,0],[2,1,20],[3,1,0],[4,1,0]]\r\n  // });\r\n\r\n\r\n\r\n    var option;\r\n    option = {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          triggerOn: 'mousemove',\r\n          enterable: true, //鼠标是否可进入提示框浮层中\r\n          formatter: formatterHover, //修改鼠标悬停显示的内容\r\n          backgroundColor:'#302F39',\r\n          borderColor:'#302F39',\r\n          className:'base-tool-tip',\r\n          enterable:true\r\n        },\r\n        xAxis3D: {\r\n            name: '',\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:12\r\n            },\r\n            type: 'category',\r\n            data: [0,1,2,3,4],\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        yAxis3D: {\r\n            name: '',\r\n            type: 'value',\r\n            // axisLine:{\r\n            //     show:true,\r\n            //     interval:0,\r\n            //     lineStyle:{\r\n            //         color:'#8F959E'\r\n            //     }\r\n            // },\r\n            // axisLabel:{\r\n            //     interval:0,\r\n            //     textStyle:{\r\n            //         color:'#8F959E'\r\n            //     }\r\n            // }\r\n        },\r\n        zAxis3D: {\r\n            name: '功率(kW)',\r\n            type: 'value',\r\n            nameGap:30,\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:12\r\n            },\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        grid3D: {\r\n            top:0,\r\n            show: true,\r\n            axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                    width: 1\r\n                }\r\n            },\r\n            viewControl: {\r\n                // 设置默认视角\r\n                beta: 20,\r\n                alpha: 3,\r\n                // 视角距离\r\n                distance: 170\r\n            },\r\n            splitLine: {\r\n                show: false\r\n            },\r\n            axisPointer: {\r\n                show: false\r\n            },\r\n            borderWidth: 0,\r\n            // boxDepth: 100,\r\n            boxHeight:40,\r\n            light: {\r\n            main: {\r\n                intensity: 1.2,\r\n                shadow: true\r\n            },\r\n            ambient: {\r\n                intensity: 0.3\r\n            }\r\n            },\r\n            light: {\r\n              main: {\r\n                intensity: 1.2\r\n              },\r\n              ambient: {\r\n                intensity: 0.3\r\n              }\r\n            }\r\n        },\r\n        series: [...series]\r\n    };\r\n\r\n    option && myChart.setOption(option);\r\n  }\r\n\r\n  useEffect(() => {\r\n    init()\r\n  },[timerList,baselineList,predictionList])\r\n\r\n  \r\n  return <div id='main-02' style={{width:'592px',height:'320px'}}></div>\r\n};\r\n\r\nexport default Chart02;\r\n","import React, { useEffect } from 'react';\r\nimport * as echarts from 'echarts';\r\n// import echarts  from '../../../../echarts.js'\r\nimport 'echarts-gl';\r\nimport './index.scss'\r\nconst Chart03 = (props) => {\r\n  const { timerList,baselineList,predictionList } = props || {}\r\n  const init = () => {\r\n    var chartDom = document.getElementById('main-03');\r\n    var myChart = echarts.init(chartDom);\r\n    var option;\r\n    var series = [];\r\n\r\n    const data = [\r\n      {\r\n        adjust:false,\r\n        value: [0,800,400]\r\n      },\r\n      {\r\n        adjust:true,\r\n        value: [[1,500,500],[1,400,500]]\r\n      },\r\n      {\r\n        adjust:false,\r\n        value: [2,700,400]\r\n      }\r\n    ]\r\n\r\n    const formdata = []\r\n\r\n    for(let i = 0;i < data.length;i++){\r\n        if(data[i].adjust){\r\n          const item = data[i].value\r\n\r\n          let arr1 = item[0]\r\n          let arr2 = item[1]\r\n          for(let i = 1;i <= arr1[1];i++){\r\n            formdata.push({\r\n              value:[arr1[0],i,arr1[2]],\r\n              itemStyle: {\r\n                  color:'#3370FF'\r\n              }\r\n            })\r\n          }\r\n          for(let i = arr1[1];i <= arr1[1]+arr1[2];i++){\r\n            formdata.push({\r\n               value:[arr2[0],i,arr2[2]],\r\n              itemStyle: {\r\n                  color:'#44D7B6'\r\n              }\r\n            })\r\n          }\r\n        }else{\r\n          const item = data[i]\r\n          for(let i = 1;i <= item.value[1];i++){\r\n            formdata.push({\r\n              value:[item.value[0],i,item.value[2]],\r\n              itemStyle: {\r\n                color:'#B1CBE2'\r\n              }\r\n            })\r\n          }\r\n        }\r\n    }\r\n\r\n    series.push({\r\n        stack: true,\r\n        shading: 'lambert',\r\n        emphasis: {\r\n            label: {\r\n                show: false\r\n            }\r\n        },\r\n        type: 'bar3D',\r\n        barSize: [10, 1, 10],\r\n        data: formdata\r\n    });\r\n\r\n  //   series.push({\r\n  //     stack: true,\r\n  //     shading: 'lambert',\r\n  //     emphasis: {\r\n  //         label: {\r\n  //             show: false\r\n  //         }\r\n  //     },\r\n  //     type: 'bar3D',\r\n  //     barSize: [10, 10, 10],\r\n  //     data: [[0,0,5],[1,1,0],[2,1,20],[3,1,0],[4,1,0]]\r\n  // });\r\n\r\n\r\n\r\n    var option;\r\n    option = {\r\n        xAxis3D: {\r\n            name: '',\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:12\r\n            },\r\n            type: 'category',\r\n            data: [0,1,2,3,4],\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        yAxis3D: {\r\n            name: '',\r\n            type: 'value',\r\n            // axisLine:{\r\n            //     show:true,\r\n            //     interval:0,\r\n            //     lineStyle:{\r\n            //         color:'#8F959E'\r\n            //     }\r\n            // },\r\n            // axisLabel:{\r\n            //     interval:0,\r\n            //     textStyle:{\r\n            //         color:'#8F959E'\r\n            //     }\r\n            // }\r\n        },\r\n        zAxis3D: {\r\n            name: '功率(kW)',\r\n            type: 'value',\r\n            nameGap:30,\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:12\r\n            },\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        grid3D: {\r\n            top:0,\r\n            show: true,\r\n            axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                    width: 1\r\n                }\r\n            },\r\n            viewControl: {\r\n                // 设置默认视角\r\n                beta: 20,\r\n                alpha: 3,\r\n                // 视角距离\r\n                distance: 170\r\n            },\r\n            splitLine: {\r\n                show: false\r\n            },\r\n            axisPointer: {\r\n                show: false\r\n            },\r\n            borderWidth: 0,\r\n            boxWidth: 200,\r\n            boxDepth: 30,\r\n            light: {\r\n            main: {\r\n                intensity: 1.2,\r\n                shadow: true\r\n            },\r\n            ambient: {\r\n                intensity: 0.3\r\n            }\r\n            },\r\n            light: {\r\n              main: {\r\n                intensity: 1.2\r\n              },\r\n              ambient: {\r\n                intensity: 0.3\r\n              }\r\n            }\r\n        },\r\n        series: [...series]\r\n    };\r\n\r\n    option && myChart.setOption(option);\r\n  }\r\n\r\n  useEffect(() => {\r\n    init()\r\n  },[timerList,baselineList,predictionList])\r\n\r\n  \r\n  return <div id='main-03' style={{width:'592px',height:'320px'}}></div>\r\n};\r\n\r\nexport default Chart03;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Select, Button, DatePicker,Tooltip,message,TimePicker,Skeleton } from 'antd'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { calcNum } from './utils/index'\r\nimport CommonModal from './component/modal'\r\nimport StrategyModal from './component/strategy-modal/index'\r\nimport Chart01 from './component/chart01'\r\nimport Chart02 from './component/chart02'\r\nimport Chart03 from './component/chart03'\r\n\r\n// import locale from 'antd/locale/zh_CN';\nimport dayjs from 'dayjs';\r\nimport { jsPlumb } from \"jsplumb\"; \r\n\r\nimport classNames from 'classnames';\r\nimport { mapStrategyName,\r\n         formatDate,\r\n         isTimeDifferenceTwoHours,\r\n         renderResponseType,\r\n         renderResponseLevel,\r\n         renderResponseStatus,\r\n         renderNodeStatus,\r\n         calcEndDate,\r\n} from './utils'\r\nimport axios from 'axios'\r\nimport './index.scss'\r\nimport weekday from \"dayjs/plugin/weekday\"\r\nimport localeData from \"dayjs/plugin/localeData\"\r\nimport http from '../../../server/server';\r\ndayjs.extend(weekday)\r\ndayjs.extend(localeData)\r\n\r\n\r\nconst { RangePicker } = TimePicker;\r\n\r\nconst Spotforecast = () => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isStrategyModalOpen, setIsStrategyModalOpen] = useState(false);\r\n    const [currentRespId, setCurrentRespId] = useState(null);\r\n    const [taskNumberList,setTaskNumberList] = useState([])\r\n    const [taskStatus,setTaskStatus] = useState('-1')\r\n    const [responseType,setResponseType] = useState('-1')\r\n    const [strategyList,setStrategyList] = useState([])\r\n    const [logList,setLogList] = useState([])\r\n    const [selectedStrategyItem,setSelectedStrategyItem] =  useState({})\r\n\r\n    const [timerList,setTimerList] = useState([])\r\n    const [colorTimerList,setColorTimerList] = useState([])\r\n    const [baselineList,setBaselineList] = useState([])\r\n    const [predictionList,setPredictionList] = useState([])\r\n    const [realList,setRealList] = useState([])\r\n    const [bottomList,setBottomList] = useState([])\r\n    const [topList,setTopList] = useState([])\r\n\r\n    const [startTime, setStartTime] = useState(null);\r\n    const [endTime, setEndTime] = useState(null);\r\n    const [currentTime,setCurrentTime] = useState('')\r\n    const [allTaskList,setAllTaskList] = useState([])\r\n    const [nodeId,setNodeId] = useState('')\r\n    const [nodeList,setNodeList] = useState([])\r\n    const [taskInfo,setTaskInfo] = useState({})\r\n    const [allNodeList,setAllNodeList] = useState([])\r\n    const [sTime,setSTime] =  useState(null)\r\n    const [eTime,setETime] =  useState(null)\r\n    \r\n    const history= useHistory()\r\n    const handleTaskStatusChange = (value) => {\r\n        setTaskNumberList([])\r\n        setCurrentRespId('')\r\n        setTaskStatus(value)\r\n        getTaskCodeList(value,responseType,false)\r\n    };\r\n\r\n    const handleResponseChange = (value) => {\r\n        setTaskNumberList([])\r\n        setCurrentRespId('')\r\n        setResponseType(value)\r\n        getTaskCodeList(taskStatus,value,false)\r\n    }\r\n\r\n    const handleTaskNumberChange = (value) => {\r\n        const item = allTaskList.find(item => item.respId === value)\r\n\r\n        const {startTime,endDate,endTime } = calcEndDate(item?.rsTime)\r\n        setStartTime(startTime)\r\n        setSTime(`${endDate} ${startTime}`)\r\n        setETime(`${endDate} ${endTime}`)\r\n        setEndTime(endTime)\r\n        setCurrentTime(endDate)\r\n        setCurrentRespId(value)\r\n    }\r\n    \r\n\r\n    const queryAllNodeList = (respId,startTime,endTime,sTime,eTime) => {\r\n        http.post('AIEnergy/demandNodeQuery', {respId}, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            const list = response.data.data || []\r\n            setAllNodeList(list)\r\n            setNodeId(list[0].value)\r\n            setTimeout(() => {\r\n                queryChart(respId,startTime,endTime,list[0].value,sTime,eTime)\r\n            }, 200);\r\n        })\r\n        .catch(function (error) {\r\n            // message.error(`接口错误getTaskCodeList`)\r\n        });\r\n    }\r\n\r\n    const onQuery = (respId,startTime,endTime,sTime,eTime) => {\r\n        queryStrategy(respId)\r\n        setTimeout(() => {\r\n            getDecisionChainList(respId)\r\n        }, 300);\r\n        setTimeout(() => {\r\n            queryAllNodeList(respId,startTime,endTime,sTime,eTime)\r\n        }, 400);\r\n    }   \r\n\r\n    const getTaskCodeList = (status,respType,load=true) => {\r\n        const data = { status, respType };\r\n        http.post('AIEnergy/getTaskCodeList', data, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            const list = response.data.data.content\r\n            setAllTaskList(list)\r\n            const options = list?.map((item) => {\r\n               return {\r\n                  label:item?.taskCode,\r\n                  value:item?.respId\r\n               }\r\n            })\r\n            \r\n            const respId = options[0]?.value\r\n            const {startTime,endDate,endTime } = calcEndDate(list[0]?.rsTime)\r\n            setStartTime(startTime)\r\n            setEndTime(endTime)\r\n            setCurrentTime(endDate) \r\n            setSTime(list[0]?.rsTime)\r\n            setETime(list[0]?.reTime)\r\n            setCurrentRespId(respId)\r\n            setTaskNumberList(options)\r\n            load && respId && onQuery(respId,list[0]?.rsTime,`${endDate} ${endTime}`,list[0]?.rsTime,list[0]?.reTime)\r\n        })\r\n        .catch(function (error) {\r\n            // message.error(`接口错误getTaskCodeList`)\r\n        });\r\n    }\r\n\r\n    const queryStrategy = (respId) => {\r\n        http.post(\"AIEnergy/strategyQuery\", {respId}, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            const list = response.data.data?.map((item) => {\r\n               return {\r\n                  nodeName:item?.nodeName,\r\n                  id:item?.id,\r\n                  content:item?.strategyContent,\r\n                  time:item?.timePoint,\r\n                  noHouseholds:item?.noHouseholds,\r\n                  deviceName:item?.deviceName,\r\n               }\r\n            })\r\n            setStrategyList(list)\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误strategyQuery`)\r\n        });\r\n    }\r\n\r\n    const queryLog = (respId) => {\r\n        http.post(\"AIEnergy/strategyLogQuery\", {respId}, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            const list = response.data.data?.map((item) => {\r\n               return {\r\n                  node:mapStrategyName(item?.nodeId),\r\n                  id:item?.id,\r\n                  content:item?.strategyContent,\r\n                  time:item?.timePoint\r\n               }\r\n            })\r\n            setLogList(list)\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误strategyLogQuery`)\r\n        });\r\n    }\r\n\r\n    const queryChart = (respId,startTime,endTime,nodeId,sTime,eTime) => {\r\n        http.post(\"AIEnergy/demandForecastChart\",{\r\n            respId,\r\n            nodeId,\r\n            systemId: \"kongtiao\",\r\n            rsTime : startTime,\r\n            reTime : endTime,\r\n            sTime,\r\n            eTime\r\n        }, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            const tempTimerList = response.data.data?.map((item => {\r\n                return {\r\n                    value:item?.timeStamp,\r\n                    textStyle: {\r\n                        fontSize: 8,\r\n                        color: '#8F959E'\r\n                    }\r\n                }\r\n            }))\r\n\r\n            const tempColorTimerList = response.data.data?.map((item => {\r\n                return {\r\n                    value:item?.timeStamp,\r\n                    textStyle: {\r\n                        fontSize: 8,\r\n                        color: item.adjust ? '#0F9D90' : '#8F959E'\r\n                    }\r\n                }\r\n            }))\r\n            setColorTimerList(tempColorTimerList)\r\n\r\n            const tempPredictionList = response.data.data?.map(item => {\r\n                return {\r\n                    value:item?.forecastLoad,\r\n                    itemStyle: {\r\n                        color:'#7CA5CF'\r\n                    }\r\n                }\r\n            })\r\n            const tempRealList = response.data.data?.map(item => {\r\n                return {\r\n                    value:item?.realValue,\r\n                    itemStyle: {\r\n                        color:'#3370FF'\r\n                    }\r\n                }\r\n            })\r\n\r\n            const tempBaselineList = response.data.data?.map((item => {\r\n                return item?.baselineLoadValue\r\n            }))\r\n\r\n            const tempBottomList = response.data.data?.map(((item,i) => {\r\n               if(item?.adjust){\r\n                  return {\r\n                     value : item?.forecastLoadAfterRegulation ? item?.forecastLoadAfterRegulation : [i,0,0],\r\n                     itemStyle:{\r\n                        color:'#3370FF'\r\n                     }\r\n                  }\r\n               }else{\r\n                  return {\r\n                    value: item?.forecastLoad,\r\n                    itemStyle: {\r\n                       color:'#7CA5CF'\r\n                    }\r\n                }\r\n             }\r\n            }))\r\n\r\n            const tempTopList = response.data.data?.map(((item,i) => {\r\n                if(item.adjust){\r\n                   return {\r\n                      value : item?.forecastRegulationLoad ? item?.forecastRegulationLoad : [i,0,0],\r\n                      itemStyle:{\r\n                         color:'#44D7B6'\r\n                      }\r\n                   }\r\n                }else{\r\n                   return {\r\n                     value: [i,0,0],\r\n                     itemStyle: {\r\n                        color:'#7CA5CF'\r\n                     }\r\n                 }\r\n              }\r\n            }))\r\n\r\n\r\n            setTimerList(tempTimerList)\r\n            setPredictionList(tempPredictionList)\r\n            setBaselineList(tempBaselineList)\r\n            setRealList(tempRealList)\r\n            setTopList(tempTopList)\r\n            setBottomList(tempBottomList)\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误demandForecastChart`)\r\n        });\r\n    }      \r\n\r\n\tconst instance = jsPlumb.getInstance();\r\n\tconst resize = () => {\r\n\t\tinstance.repaintEverything();\r\n\t};\r\n\tconst clear = () => { \r\n\t\tinstance.deleteEveryConnection();\r\n\t};\r\n    const init = (nodeList,respTask) => {\r\n      \r\n\t};\r\n\r\n    const getDecisionChainList = (respId) => {\r\n        const params = new URLSearchParams();\r\n        params.append(\"respId\", respId);\r\n        http.post(\"AIEnergy/getDecisionChainList\",params)\r\n        .then(function (response) {\r\n            const data = response.data.data\r\n            setNodeList(data?.nodeList)\r\n            setTaskInfo(data?.respTask)\r\n            init(data?.nodeList,data?.respTask)\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误getDecisionChainList`)\r\n        });\r\n    }\r\n\r\n    const onQueryChart = (respId,start,end,sTime,eTime) => {    \r\n        if(!currentTime){\r\n            message.error('请输入日期');\r\n            return\r\n        } \r\n        if(!start || !end){\r\n            message.error('请输入时间');\r\n            return\r\n        }\r\n        if(isTimeDifferenceTwoHours(start,end)){\r\n            message.error('时间范围只允许两个半小时之内');\r\n            return\r\n        }\r\n        // setSpinning(true)\r\n        queryChart(respId,start,end,nodeId,sTime,eTime)\r\n        // setTimeout(() => {\r\n        //     setSpinning(false)\r\n        // }, 1000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const leftDom = document.getElementsByClassName('spot-forecast_content_left')[0]\r\n        const rightDom = document.getElementsByClassName('spot-forecast_content_right')[0]\r\n        rightDom?.setAttribute('style', `height:${leftDom.clientHeight}px`)\r\n        getTaskCodeList(taskStatus,responseType)\r\n        return () => {\r\n\t\t\tclear();\r\n\t\t\twindow.removeEventListener(\"resize\", resize);\r\n\t\t};\r\n    }, [])\r\n\r\n    return (    \r\n        <>\r\n            {/* <Spin spinning={spinning} fullscreen /> */}\r\n            <div className=\"spot-forecast\">\r\n                <div className=\"spot-forecast_content\">\r\n                    <div className={classNames('spot-forecast_content_left')}>\r\n                    <div className='spot-forecast_content_left_header'>\r\n                        <DatePicker format='YYYY-MM-DD' allowClear={false} defaultValue={dayjs(currentTime, 'YYYY-MM-DD')} value={dayjs(currentTime, 'YYYY-MM-DD')} style={{width:'150px',marginRight:'10px'}} onChange={(date, dateString) => {\r\n                            setCurrentTime(dateString)\r\n                        }}/>\r\n                        <RangePicker \r\n                            format='HH:mm'\r\n                            style={{width:'150px',marginRight:'5px'}}\r\n                            defaultValue={[dayjs(startTime, 'HH:mm'),dayjs(endTime, 'HH:mm')]} \r\n                            value={[dayjs(startTime, 'HH:mm'),dayjs(endTime, 'HH:mm')]}\r\n                            onChange={(value) => {\r\n                                if (value && value.length === 2) {\r\n                                    const startTimeStr = value[0]?.format('HH:mm')\r\n                                    const endTimeStr = value[1]?.format('HH:mm')\r\n                                    setStartTime(startTimeStr);\r\n                                    setEndTime(endTimeStr);\r\n                                } else {\r\n                                    setStartTime(null);\r\n                                    setEndTime(null);\r\n                                }\r\n                            }}\r\n                            minuteStep={15}\r\n                        />\r\n                        <Button className='left-query-btn' style={{width:'63px'}} onClick={() => onQueryChart(currentRespId,currentTime + ' ' + startTime,currentTime + ' ' + endTime,sTime,eTime)}>查询</Button>\r\n                        </div>\r\n                        <div className='spot-forecast_content_left_content'>\r\n                            <div>\r\n                                <div className='chart-wrap'>\r\n                                    <i className='chart-icon' />\r\n                                    <span className='chart-title'>基础现货功率价格预测能量块</span>\r\n                                </div>\r\n                                <Chart01 timerList={colorTimerList} baselineList={baselineList} predictionList={predictionList}/>\r\n                            </div>\r\n                            <div>\r\n                                <div className='chart-wrap'>\r\n                                    <i className='chart-icon' />\r\n                                    <span className='chart-title'>基于策略的功率价格预测能量块</span>\r\n                                </div>\r\n                                <Chart02 timerList={colorTimerList} baselineList={baselineList} topList={topList} bottomList={bottomList} predictionList={predictionList}/>\r\n                            </div>\r\n                            <div>\r\n                                <div className='chart-wrap'>\r\n                                    <i className='chart-icon' />\r\n                                    <span className='chart-title'>实际现货功率价格能量块</span>\r\n                                </div>\r\n                                <Chart03 timerList={colorTimerList} realList={realList} baselineList={baselineList}/>\r\n                            </div>                   \r\n                        </div>\r\n                    </div>\r\n                    <div className='spot-forecast_content_right'>\r\n                        <>\r\n                            <div className='spot-forecast_content_right_header'>\r\n                                <div className='title-wrapper'>\r\n                                    <i className='spot-forecast-dots' /> \r\n                                    <span className='spot-forecast-title'>拓扑图</span>\r\n                                </div>\r\n                                <i className='expand-icon' onClick={() => {\r\n                                    history.push({\r\n                                        pathname: \"/AllNodePage\",\r\n                                        state:{ respId: currentRespId }\r\n                                    });\r\n                                }} />\r\n                            </div>\r\n                            <div className='spot-forecast_content_right_content'>\r\n                                    <div className='spot-forecast-right-top'>\r\n                                        <div className='right-img'></div>\r\n                                    <span className='right-text' id='node-top'>需求响应平台</span>\r\n                                    </div>\r\n                                    <div className='spot-forecast-right-center'>\r\n                                        <div className={classNames('center-img-top', \r\n                                                        { 'overturn':renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"待出清\" || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"执行中\" },\r\n                                                        { 'completed':renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"已完成\" })}>\r\n\r\n                                        </div>\r\n                                        <div className='model-wrap'>\r\n                                            <div className='modal-img'  id='node-center'></div>\r\n                                            <span className='model-text' id='node-center-bottom'>能源大模型</span>\r\n                                        </div>\r\n                                        <div className='left-text-wrap'>\r\n                                            <p className='left-text'>响应时段：{taskInfo?.rsTime}-{taskInfo?.reTime?.split(' ')[1]}</p>\r\n                                            <p className='left-text'>负荷需求(kW)：{calcNum(taskInfo?.respLoad)}</p>\r\n                                            {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已出清' || \r\n                                            renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || \r\n                                            renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ? \r\n                                            <p className='left-text'>出清负荷(kW)：{calcNum(taskInfo?.declareLoad)}</p> : null\r\n                                        }\r\n                                            <p className='left-text'>响应类型：{renderResponseType(taskInfo?.respType)}</p>\r\n                                            <p className='left-text'>响应级别：{renderResponseLevel(taskInfo?.respLevel)}</p>\r\n                                        </div>\r\n                                        <div className={classNames('right-text-wrap',{'special-right-text-wrap' : renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' || nodeList?.length >= 3})}>\r\n                                            <p className='other-right-text'>需求响应状态：{renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)}</p>\r\n                                            <p className='other-right-text'>申报负荷(kW)：{renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '待申报' ? 0 : calcNum(taskInfo?.declareLoad)}</p>\r\n                                            <p className='other-right-text'>调节负荷(kW)：{renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '待申报' ? 0 : calcNum(taskInfo?.adjustLoad)}</p>\r\n                                            {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '待申报' ? null :<p className='other-right-text'>预测负荷(kW)：{calcNum(taskInfo?.forecastLoad)}</p>}\r\n                                            {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' ? <>\r\n                                                <p className='other-right-text'>实际负荷(kW)：{calcNum(taskInfo?.nowLoad)}</p>\r\n                                                <p className='other-right-text'>基线负荷(kW)：{calcNum(taskInfo?.baseLoad)}</p>\r\n                                            </>:null}\r\n                                            {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ? <>\r\n                                                <p className='other-right-text'>响应负荷(kW)：{calcNum(taskInfo?.actualLoad)}</p>\r\n                                                <p className='other-right-text'>响应电量(kW)：{calcNum(taskInfo?.actualPower)}</p>\r\n                                                <p className='other-right-text'>预估收益（元）：{calcNum(taskInfo?.profit)}元</p>\r\n                                            </>:null}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`spot-forecast-right-bottom-${nodeList?.length}`}>\r\n                                        { nodeList?.slice(0,3)?.map((item,i) => {\r\n                                            return <div  className={classNames(`bottom-gif-${i+1}`, \r\n                                            { 'overturn':renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"待申报\" || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"执行中\" },\r\n                                            { 'completed':renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"已完成\" })} ></div>\r\n                                        })}\r\n                                    </div> \r\n                                    <div className='dots-wrapper'>\r\n                                        {\r\n                                            nodeList?.slice(0,3)?.map((item,i) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        <div className='dots-1'>\r\n                                                            <div className='dots-1-header' id={`node-item-${i}`}>\r\n                                                                <div className={classNames('round',{'online-status':item?.online})}></div>\r\n                                                                <Tooltip placement=\"top\" title={item.nodeName} color='#38373F'>\r\n                                                                        <span className='dots-1-header-text'>{item?.nodeName}</span>\r\n                                                                </Tooltip>\r\n                                                            </div>\r\n                                                            <div className='dots1-content'>\r\n                                                                <p className='dots1-text'>状态：{renderNodeStatus(item?.drsStatus) || '-'}</p>\r\n                                                                <>\r\n                                                                    <p className='dots1-text'>申报负荷(kW)：{renderNodeStatus(item?.drsStatus) ==='待申报' ? calcNum(taskInfo?.declareLoad - item?.declareLoad): calcNum(item?.declareLoad)}</p>\r\n                                                                    <p className='dots1-text'>调节负荷(kW)：{renderNodeStatus(item?.drsStatus) ==='待申报' ? calcNum(taskInfo?.adjustLoad- item?.adjustLoad) : calcNum(item?.adjustLoad)}</p>\r\n                                                                    <p className='dots1-text'>预测负荷(kW)：{calcNum(item?.forecastLoad)}</p>\r\n                                                                </>\r\n                                                                {\r\n                                                                    item?.drsStatus === 24 ? \r\n                                                                    <>\r\n                                                                        <p className='dots1-text'>实际负荷(kW)：{calcNum(item?.nowLoad)}</p>\r\n                                                                        <p className='dots1-text'>基线负荷(kW)：{calcNum(item?.baseLoad)}</p>\r\n                                                                    </> : null\r\n                                                                }\r\n                                                                {\r\n                                                                    item?.drsStatus === 25 ? \r\n                                                                    <>\r\n                                                                        <p className='dots1-text'>响应负荷(kW)：{calcNum(item?.responseLoad)}</p>\r\n                                                                        <p className='dots1-text'>响应电量(kW)：{calcNum(item?.realTimeLoad)}</p>\r\n                                                                        <p className='dots1-text'>预估收益（元）：{calcNum(item?.profit)}元</p>\r\n                                                                    </> : null\r\n                                                                }\r\n                                                                \r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </>             \r\n                                                )\r\n                                            }) \r\n                                        }\r\n                                    </div>\r\n                                <div className='strategy-wrap'>\r\n                                    <div className='strategy-title-wrap'>\r\n                                        <div className='strategy-title'>\r\n                                            <span className='strategy-wrap-title active'>策略</span>\r\n                                            <i className='line' />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='table-wrap'>\r\n                                        <div className='odd-rows first-line'>\r\n                                            <span className='one-arrange'>节点</span>\r\n                                            <span className='two-arrange'>户号</span>\r\n                                            <span className='three-arrange'>时间点</span>\r\n                                            <span className='three-arrange'>策略内容</span>\r\n                                            <span className='four-arrange' style={{display:renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ? 'none':'block'}}>操作</span>\r\n                                        </div>\r\n                                        {\r\n                                            strategyList?.map((item,i) => {\r\n                                                return (\r\n                                                    <div key={i} className={classNames(i % 2 === 0 ? 'even-rows':'odd-rows')}>\r\n                                                        <Tooltip placement=\"top\" title={item.nodeName} color='#38373F'>\r\n                                                            <span className='one-arrange'>{item.nodeName}</span>\r\n                                                        </Tooltip>\r\n                                                        <Tooltip placement=\"top\" title={item.noHouseholds} color='#38373F'>\r\n                                                            <span className='two-arrange'>{item.noHouseholds}</span>\r\n                                                        </Tooltip>\r\n                                                        <span className='three-arrange'>{formatDate(item.time)}</span>\r\n                                                        <Tooltip placement=\"top\" title={item.content} color='#38373F'>\r\n                                                            <span className='three-arrange'>{item.content}</span>\r\n                                                        </Tooltip>\r\n                                                        <span className='four-arrange' style={{display:renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ? 'none':'block'}} onClick={(e) => {\r\n                                                            setSelectedStrategyItem(item)\r\n                                                            setIsStrategyModalOpen(true)\r\n                                                        }}>修改</span>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <CommonModal setIsModalOpen={setIsModalOpen} isModalOpen={isModalOpen} nodeList={nodeList} taskInfo={taskInfo}/>\r\n            {\r\n                isStrategyModalOpen ?       \r\n                <StrategyModal \r\n                    setIsStrategyModalOpen={setIsStrategyModalOpen} \r\n                    selectedStrategyItem={selectedStrategyItem}\r\n                    queryStrategy={() => queryStrategy(currentRespId)}\r\n                /> : null\r\n            }\r\n      \r\n        </> \r\n    )\r\n\r\n}\r\nexport default Spotforecast\r\n\r\n"],"names":["formatDate","objDate","timestamp","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","renderResponseType","type","renderResponseLevel","renderResponseStatus","dstatus","declareStatus","renderNodeStatus","status","calcEndDate","date","Number","startTime","split","endDate","endTime","calcNum","num","isNaN","Math","round","DatePicker","Input","props","setIsTipsModalOpen","isTipsModalOpen","handleCancel","className","visible","footer","title","onCancel","onClick","isModalOpen","setIsModalOpen","taskInfo","nodeList","useState","closable","rsDate","respLoad","respType","respLevel","declareLoad","adjustLoad","forecastLoad","map","item","i","classNames","online","nodeName","drsStatus","deviceRatedLoad","reality","income","setIsStrategyModalOpen","selectedStrategyItem","queryStrategy","id","noHouseholds","time","deviceName","content","substring","length","temperature","setTemperature","placement","join","color","value","onChange","e","target","style","width","height","message","http","strategyContent","headers","then","response","catch","error","timerList","baselineList","predictionList","useEffect","option","chartDom","document","getElementById","myChart","echarts","init","data","adjust","formdata","arr1","JSON","parse","stringify","arr2","push","itemStyle","xAxis3D","name","nameTextStyle","fontSize","axisLine","show","interval","lineStyle","axisLabel","textStyle","yAxis3D","nameGap","minInterval","zAxis3D","grid3D","boxDepth","boxHeight","light","main","intensity","shadow","ambient","series","setOption","console","log","stack","shading","emphasis","label","barSize","tooltip","trigger","triggerOn","enterable","formatter","params","arr","normal","special1","special2","forEach","backgroundColor","borderColor","top","viewControl","beta","alpha","distance","splitLine","axisPointer","borderWidth","boxWidth","dayjs","weekday","localeData","RangePicker","TimePicker","isStrategyModalOpen","currentRespId","setCurrentRespId","setTaskNumberList","taskStatus","responseType","strategyList","setStrategyList","setSelectedStrategyItem","setTimerList","colorTimerList","setColorTimerList","setBaselineList","setPredictionList","realList","setRealList","bottomList","setBottomList","topList","setTopList","setStartTime","setEndTime","currentTime","setCurrentTime","setAllTaskList","nodeId","setNodeId","setNodeList","setTaskInfo","setAllNodeList","sTime","setSTime","eTime","setETime","history","useHistory","onQuery","respId","setTimeout","getDecisionChainList","list","queryChart","queryAllNodeList","getTaskCodeList","load","options","taskCode","rsTime","reTime","timePoint","systemId","tempTimerList","timeStamp","tempColorTimerList","tempPredictionList","tempRealList","realValue","tempBaselineList","baselineLoadValue","tempBottomList","forecastLoadAfterRegulation","tempTopList","forecastRegulationLoad","instance","jsPlumb","resize","repaintEverything","URLSearchParams","append","respTask","onQueryChart","start","end","timeStr1","timeStr2","date1","date2","abs","getTime","isTimeDifferenceTwoHours","leftDom","getElementsByClassName","rightDom","setAttribute","clientHeight","deleteEveryConnection","window","removeEventListener","format","allowClear","defaultValue","marginRight","dateString","startTimeStr","endTimeStr","minuteStep","pathname","state","nowLoad","baseLoad","actualLoad","actualPower","profit","slice","responseLoad","realTimeLoad","display"],"sourceRoot":""}