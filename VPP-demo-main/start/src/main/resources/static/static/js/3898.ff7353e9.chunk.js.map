{"version":3,"file":"static/js/3898.ff7353e9.chunk.js","mappings":"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","sources":["views/Forecasting/demandForecast/component/all-node-page/index.js","views/Forecasting/demandForecast/utils/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport http from '../../../../../server/server';\r\nimport classNames from 'classnames'\r\nimport {renderResponseType,renderResponseLevel,renderNodeStatus,renderDeclareLoad,renderAdjustLoad} from '../../utils'\r\nimport { jsPlumb } from \"jsplumb\"; \r\nimport './index.scss'\r\nimport {message,Tooltip} from 'antd'\r\nimport { useHistory,useLocation } from \"react-router-dom\";\r\nimport { calcNum,renderResponseStatus } from '../../utils'\r\n\r\nconst AllNodePage = () => {\r\n    const [nodeList,setNodeList] = useState([])\r\n    const [taskInfo,setTaskInfo] = useState([])\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    let timer;\r\n\tconst instance = jsPlumb.getInstance();\r\n\tconst resize = () => {\r\n\t\tinstance.repaintEverything();\r\n\t};\r\n\tconst clear = () => {\r\n\t\tif (timer) {\r\n\t\t\tclearInterval(timer);\r\n\t\t}\r\n\t\tinstance.deleteEveryConnection();\r\n\t};\r\n   \r\n\tconst init = (nodeList,respTask) => {\r\n        let m = 0.01;\r\n        let l = 0.98;\r\n\t\ttimer = setInterval(() => {\r\n\t\t\tm += 0.02;\r\n\t\t\tif (m > 0.98) {\r\n\t\t\t\tm = 0.012;\r\n\t\t\t}\r\n            l -= 0.02;\r\n\t\t\tif (l < 0.012) {\r\n\t\t\t\tl = 0.98\r\n\t\t\t}\r\n\t\t\tinstance.deleteEveryConnection();\r\n\r\n            const topStatusText = renderResponseStatus(respTask?.dstatus,respTask?.declareStatus)\r\n\r\n            if(topStatusText === \"待申报\" || topStatusText === \"已出清\"){\r\n                instance.connect({\r\n                    source: \"node-top\",//图一的id\r\n                    target: \"node-center\",//图二的id\r\n                    endpoint: \"Blank\", //端点的形状设置为空\r\n                    connector: ['Straight'],\r\n                    anchor: [\"Bottom\", \"Top\"],//连接端点的位置，起始节点的右侧和结束节点的左侧\r\n                    paintStyle: { stroke: \"#0F9D90\", strokeWidth: 2},//线的样式\r\n                    overlays: [\r\n                        [\"Arrow\",{ width: 12, length: 12, location:m}],//小箭头样式及位置\r\n                    ],\r\n                });\r\n            }\r\n\r\n            if(topStatusText === \"待出清\" || topStatusText === \"执行中\"){\r\n                instance.connect({\r\n                    source: \"node-top\",//图一的id\r\n                    target: \"node-center\",//图二的id\r\n                    endpoint: \"Blank\", //端点的形状设置为空\r\n                    connector: ['Straight'],\r\n                    anchor: [\"Bottom\", \"Top\"],\r\n                    paintStyle: { stroke: \"#0F9D90\", strokeWidth: 2},//线的样式\r\n                    overlays: [\r\n                        [\"Arrow\",{ width: 12, length: 12, location:l,direction:-1}],//小箭头样式及位置\r\n                    ],\r\n                });\r\n            }\r\n\r\n            if(topStatusText === \"已完成\"){\r\n                instance.connect({\r\n                    source: \"node-top\",//图一的id\r\n                    target: \"node-center\",//图二的id\r\n                    endpoint: \"Blank\", //端点的形状设置为空\r\n                    connector: ['Straight'],\r\n                    anchor: [\"Bottom\", \"Top\"],//连接端点的位置，起始节点的右侧和结束节点的左侧\r\n                    paintStyle: { stroke: \"#0F9D90\", strokeWidth: 2},//线的样式\r\n                });\r\n            }\r\n\r\n            nodeList?.forEach((item,i) => {\r\n                if(topStatusText === '待申报' || topStatusText === '执行中'){\r\n                    instance.connect({\r\n                        source: \"node-center-bottom\",//图一的id\r\n                        target: `node-item-${i}`,//图二的id\r\n                        endpoint: \"Blank\", //端点的形状设置为空\r\n                        connector: ['Straight'],\r\n                        anchor: [ \"Top\",\"Bottom\"],//连接端点的位置，起始节点的右侧和结束节点的左侧\r\n                        paintStyle: { stroke: \"#0F9D90\", strokeWidth: 2 },//线的样式\r\n                        overlays: [\r\n                            [\"Arrow\", { width: 12, length: 12, location:l,direction:-1}],//小箭头样式及位置\r\n                        ],\r\n                    });\r\n                }\r\n                if(topStatusText === '待出清' || topStatusText === '已出清'){\r\n                    instance.connect({\r\n                        source: \"node-center-bottom\",//图一的id\r\n                        target: `node-item-${i}`,//图二的id\r\n                        endpoint: \"Blank\", //端点的形状设置为空\r\n                        connector: ['Straight'],\r\n                        anchor: [\"Bottom\", \"Top\"],//连接端点的位置，起始节点的右侧和结束节点的左侧\r\n                        paintStyle: { stroke: \"#0F9D90\", strokeWidth: 2 },//线的样式\r\n                        overlays: [\r\n                            [\"Arrow\", { width: 12, length: 12, location:m}],//小箭头样式及位置\r\n                        ],\r\n                    });\r\n                }\r\n                if(topStatusText === '已完成'){\r\n                    instance.connect({\r\n                        source: \"node-center-bottom\",//图一的id\r\n                        target: `node-item-${i}`,//图二的id\r\n                        endpoint: \"Blank\", //端点的形状设置为空\r\n                        connector: ['Straight'],\r\n                        anchor: [\"Bottom\", \"Top\"],//连接端点的位置，起始节点的右侧和结束节点的左侧\r\n                        paintStyle: { stroke: \"#0F9D90\", strokeWidth: 2 },//线的样式\r\n                    });\r\n                }\r\n            })\r\n\r\n\t\t}, 200);\r\n\r\n\t};\r\n\r\n\r\n    const getDecisionChainList = (respId) => {\r\n        const params = new URLSearchParams();\r\n        params.append(\"respId\", respId);\r\n    \r\n        http.post(\"AIEnergy/getDecisionChainList\",params)\r\n        .then(function (response) {\r\n            const data = response.data.data\r\n            setNodeList(data?.nodeList)\r\n            setTaskInfo(data?.respTask)\r\n            init(data?.nodeList,data?.respTask)\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误getDecisionChainList`)\r\n        });\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getDecisionChainList(location.state.respId)\r\n        window.addEventListener(\"resize\", resize);\r\n\t\treturn () => {\r\n\t\t\tclear();\r\n\t\t\twindow.removeEventListener(\"resize\", resize);\r\n\t\t};\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"all-node-page\">\r\n            <i className='close-icon' onClick={() => {\r\n                history.push('/demandForecast')\r\n            }}/>\r\n            <div className='demand-forecast_content_right_content'>\r\n                <div className='demand-forecast-right-top'>\r\n                    <div className='right-img'></div>\r\n                    <span className='right-text' id='node-top'>需求响应平台</span>\r\n                </div>\r\n                <div style={{height:'1px'}} id=\"demand-forecast-right-top\"></div>\r\n\r\n                <div className='demand-forecast-right-center'>\r\n                    <div className='center-img-top'></div>\r\n                    <div style={{height:'1px'}} id=\"model-wrap\"></div>\r\n                    <div className='model-wrap'>\r\n                        <div className='modal-img' id='node-center'></div>\r\n                        <span className='model-text' id='node-center-bottom'>能源大模型</span>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className='demand-forecast-right-bottom'>\r\n                    <div className='arrow-bottom'></div>\r\n                </div>\r\n                <div className='left-text-wrap'>\r\n                    <p className='left-text'>响应时段：{taskInfo?.rsTime}-{taskInfo?.reTime?.split(' ')[1]}</p>\r\n                    <p className='left-text'>负荷需求(kW)：{calcNum(taskInfo?.respLoad)}</p>\r\n                    {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已出清' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ? <p className='left-text'>出清负荷(kW)：{calcNum(taskInfo?.declareLoad - renderDeclareLoad(nodeList?.slice(0,3)))}</p> : null}\r\n                    <p className='left-text'>响应类型：{renderResponseType(taskInfo?.respType)}</p>\r\n                    <p className='left-text'>响应级别：{renderResponseLevel(taskInfo?.respLevel)}</p>\r\n                </div>\r\n                <div className='right-text-wrap'>\r\n                    <p className='other-right-text'>需求响应状态：{renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)}</p>\r\n                    <p className='other-right-text'>申报负荷(kW)：{renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '待申报' ? 0 : calcNum(taskInfo?.declareLoad - renderDeclareLoad(nodeList))}</p>\r\n                    <p className='other-right-text'>调节负荷(kW)：{renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '待申报' ? 0 : calcNum(taskInfo?.adjustLoad - renderAdjustLoad(nodeList))}</p>\r\n                    {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '待申报' ? null :<p className='other-right-text'>预测负荷(kW)：{calcNum(taskInfo?.forecastLoad)}</p>}\r\n                    {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' ? <>\r\n                            <p className='other-right-text'>实际负荷(kW)：{calcNum(taskInfo?.actualLoad)}</p>\r\n                            <p className='other-right-text'>基线负荷(kW)：{calcNum(taskInfo?.baseLoad)}</p>\r\n                        </>:null}\r\n                    {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ? <>\r\n                        <p className='other-right-text'>响应负荷(kW)：{calcNum(taskInfo?.actualLoad)}</p>\r\n                        <p className='other-right-text'>响应电量(kWh)：{calcNum(taskInfo?.baseLoad)}</p>\r\n                        <p className='other-right-text'>预估收益（元）：{calcNum(taskInfo?.baseLoad)}元</p>\r\n                    </>:null}\r\n\r\n                </div>\r\n            </div>\r\n            <div className='dots-wrapper'>\r\n                {\r\n                    nodeList?.map((item,i) => {\r\n                        return (\r\n                            <div className='dots-1' key={i}>\r\n                                    <div className='dots-1-header' id={`node-item-${i}`}> \r\n                                        <div className={classNames('round',{'online-status':item?.online})}></div>\r\n                                        <Tooltip placement=\"top\" title={item.nodeName} color='#38373F'>\r\n                                            <span className='dots-1-header-text'>{item?.nodeName}</span>\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                    <div className='dots1-content'>\r\n                                        <p className='dots1-text'>状态：{renderNodeStatus(item?.drsStatus) || '-'}</p>\r\n                                        <>\r\n                                            <p className='dots1-text'>申报负荷(kW)：{renderNodeStatus(item?.drsStatus) ==='待申报' ? 0: calcNum(item?.declareLoad)}</p>\r\n                                            <p className='dots1-text'>调节负荷(kW)：{renderNodeStatus(item?.drsStatus) ==='待申报' ? 0: calcNum(item?.adjustLoad)}</p>\r\n                                            <p className='dots1-text'>预测负荷(kW)：{calcNum(item?.forecastLoad)}</p>\r\n                                        </>\r\n                                        {\r\n                                            item?.drsStatus === 24 ? \r\n                                            <>\r\n                                                <p className='dots1-text'>实际负荷(kW)：{calcNum(item?.deviceRatedLoad)}</p>\r\n                                                <p className='dots1-text'>基线负荷(kW)：{calcNum(item?.reality)}</p>\r\n                                            </> : null\r\n                                        }\r\n                                        {\r\n                                            item?.drsStatus === 25 ? \r\n                                            <>\r\n                                                <p className='dots1-text'>响应负荷(kW)：{calcNum(item?.responseLoad)}</p>\r\n                                                <p className='dots1-text'>响应电量(kWh)：{calcNum(item?.realTimeLoad)}</p>\r\n                                                <p className='dots1-text'>预估收益（元）：{calcNum(item?.income)}元</p>\r\n                                            </> : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n   \r\n}\r\n\r\nexport default AllNodePage","export const mapStrategyName = (key) => {\r\n    const obj = {\r\n        '3da72e052a0b48759b0f4633df42235a': '深圳某工业设备新材料股份有限公司',\r\n        '176c0991f24e30c2b25a9dbf1185b7b9': '深圳泰伦广场A座',\r\n        '5eb413037ba16ea6108c12e0d6353be3': '深圳泰伦广场B座'\r\n    }\r\n    return obj[key]\r\n}\r\n\r\n\r\nexport const formatDate = (objDate) => {\r\n    const timestamp = new Date(objDate);\r\n    const year = timestamp.getFullYear();\r\n    const month = (timestamp.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 because getMonth() returns zero-based month\r\n    const day = timestamp.getDate().toString().padStart(2, '0');\r\n    const hours = timestamp.getHours().toString().padStart(2, '0');\r\n    const minutes = timestamp.getMinutes().toString().padStart(2, '0');\r\n    const formattedDate = `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    return formattedDate;\r\n}\r\n\r\n\r\nexport const isTimeDifferenceTwoHours = (timeStr1, timeStr2) => {\r\n    const date1 = new Date(timeStr1);\r\n    const date2 = new Date(timeStr2);\r\n    const diff = Math.abs(date2.getTime() - date1.getTime());\r\n    return diff > 2.5 * 60 * 60 * 1000; // 2 hours in milliseconds\r\n}\r\n\r\nexport const renderResponseType = (type) => {\r\n    if (type === 1) {\r\n        return '削峰响应'\r\n    } else if (type === 2) {\r\n        return '填谷响应'\r\n    } else {\r\n        return '-'\r\n    }\r\n}\r\n\r\nexport const renderResponseLevel = (type) => {\r\n    if (type === 1) {\r\n        return '日前响应'\r\n    } else if (type === 2) {\r\n        return '小时响应'\r\n    } else if (type === 3) {\r\n        return '分钟响应'\r\n    } else if (type === 4) {\r\n        return '秒级响应'\r\n    }\r\n}\r\n\r\nexport const renderResponseStatus = (dstatus, declareStatus) => {\r\n    if(!declareStatus){\r\n        if(dstatus === 1){\r\n            return '待申报'\r\n        }\r\n        if(dstatus === 2){\r\n            return '执行中'\r\n        }\r\n        if(dstatus === 3){\r\n            return '已完成'\r\n        }\r\n        if(dstatus === 4 || dstatus === 0){\r\n            return '不参加'\r\n        }\r\n    }\r\n\r\n    if(!dstatus){\r\n        if(declareStatus === 1){\r\n            return '待申报'\r\n        }\r\n        if(declareStatus === 2){\r\n            return '待出清'\r\n        }\r\n        if(declareStatus === 3){\r\n            return '已出清'\r\n        }  \r\n    }\r\n\r\n    if(declareStatus){\r\n        if(declareStatus === 1 && dstatus === 1){\r\n            return '待申报'\r\n        }\r\n        if(declareStatus === 2 && dstatus === 1){\r\n            return '待出清'\r\n        }\r\n        if(declareStatus === 3 && dstatus === 1){\r\n            return '已出清'\r\n        }\r\n        if(declareStatus === 3 && dstatus === 2){\r\n            return '执行中'\r\n        }\r\n        if(declareStatus === 3 && dstatus === 3){\r\n            return '已完成'\r\n        }\r\n        if(dstatus === 4 || dstatus === 0){\r\n            return '不参加'\r\n        }\r\n    }\r\n    \r\n    return '不参加'\r\n}\r\n\r\nexport const renderNodeStatus = (status) => {\r\n    switch (status) {\r\n        case 11:\r\n            return '待申报'\r\n        case 12:\r\n            return '待申报'\r\n        case 15:\r\n            return '不参加'\r\n        case 21:\r\n            return '待出清'\r\n        case 22:\r\n            return '已出清'\r\n        case 24:\r\n            return '执行中'\r\n        case 25:\r\n            return '已完成'\r\n        default:\r\n            return '-'\r\n    }\r\n\r\n}\r\n\r\n\r\n// 示例用法\r\n\r\nexport const calcEndDate = (date) => {\r\n    const timestamp = new Date(date);\r\n    const year = timestamp.getFullYear();\r\n    const month = (timestamp.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 because getMonth() returns zero-based month\r\n    const day = timestamp.getDate().toString().padStart(2, '0');\r\n    let hours = ''\r\n    let minutes = ''\r\n    if (Number(timestamp.getHours().toString()) >= 22) {\r\n        hours = '23'\r\n        minutes = '45'\r\n    } else {\r\n        const startDate = new Date(date);\r\n        startDate.setTime(startDate.getTime() + (2.5 * 60 * 60 * 1000));\r\n        hours = (Number(startDate.getHours().toString())).toString().padStart(2, '0');\r\n        minutes = startDate.getMinutes().toString().padStart(2, '0');\r\n    }\r\n    return {\r\n        startTime: date.split(' ')[1],\r\n        endDate: `${year}-${month}-${day}`,\r\n        endTime: `${hours}:${minutes}`\r\n    }\r\n}   \r\n\r\n\r\nexport const calcNum = (num) => {\r\n    if(isNaN(num)){\r\n        return 0\r\n    }\r\n    return num ? Math.round(num*100) / 100 : 0\r\n}\r\n\r\nexport const renderDeclareLoad = (nodeList) => {\r\n    let declareLoad = 0\r\n    if(nodeList && nodeList?.length > 0){\r\n        nodeList.forEach((item) => {\r\n            if(renderNodeStatus(item?.drsStatus) ==='待申报'){\r\n                declareLoad += Number(item?.declareLoad)\r\n            } \r\n        })\r\n    }\r\n    return declareLoad\r\n}\r\n\r\nexport const renderAdjustLoad = (nodeList) => {\r\n    let adjustLoad = 0\r\n    if(nodeList && nodeList?.length > 0){\r\n        nodeList.forEach((item) => {\r\n            if(renderNodeStatus(item?.drsStatus) ==='待申报'){\r\n                adjustLoad += Number(item?.adjustLoad)\r\n            } \r\n        })\r\n    }\r\n    \r\n    return adjustLoad\r\n}"],"names":["timer","useState","nodeList","setNodeList","taskInfo","setTaskInfo","history","useHistory","location","useLocation","instance","jsPlumb","resize","repaintEverything","getDecisionChainList","respId","params","URLSearchParams","append","http","then","response","data","respTask","m","l","setInterval","deleteEveryConnection","topStatusText","renderResponseStatus","dstatus","declareStatus","connect","source","target","endpoint","connector","anchor","paintStyle","stroke","strokeWidth","overlays","width","length","direction","forEach","item","i","init","catch","error","message","useEffect","state","window","addEventListener","clearInterval","removeEventListener","className","onClick","push","id","style","height","rsTime","reTime","split","calcNum","respLoad","declareLoad","renderDeclareLoad","slice","renderResponseType","respType","renderResponseLevel","respLevel","adjustLoad","renderAdjustLoad","forecastLoad","actualLoad","baseLoad","map","classNames","online","placement","title","nodeName","color","renderNodeStatus","drsStatus","deviceRatedLoad","reality","responseLoad","realTimeLoad","income","mapStrategyName","key","formatDate","objDate","timestamp","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","isTimeDifferenceTwoHours","timeStr1","timeStr2","date1","date2","Math","abs","getTime","type","status","calcEndDate","date","Number","startDate","setTime","startTime","endDate","endTime","num","isNaN","round"],"sourceRoot":""}