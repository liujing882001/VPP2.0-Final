{"version":3,"file":"static/js/272.fa6a2c54.chunk.js","mappings":"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","sources":["views/system/Sarguments/newDate.js"],"sourcesContent":["import React,{useEffect,useState,useRef} from 'react'\nimport { Table ,Modal,message,Badge ,Views ,Button,Select  } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';// 日历格子显示\nimport interactionPlugin from '@fullcalendar/interaction'; // 拖拽插件\nimport locale from '@fullcalendar/core/locales/zh-cn';// 中文\nimport http from '../../../server/server.js'\nimport { MenuOutlined,UploadOutlined ,LeftCircleOutlined} from '@ant-design/icons';\nimport './index.scss'\r\n// let calendarApi;\r\nconst { Option } = Select;\r\n\nconst NewDate =(props) =>{\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [events,setEvents] = useState([]);\r\n\tconst [monthDate, setMonthDate] = useState('');\r\n\tconst [currentDate, setCurrentDate] = useState(dayjs().startOf('month').toDate());\r\n\tconst [dateTypeList, setDateTypeList] = useState([]);\r\n\tconst [dateTypeListTwo, setDateTypeListTwo] = useState([]);\r\n\tconst [allTypeList, setAllTypeList] = useState([]);\r\n\tconst [date,setDate] = useState('');\r\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [content, setContent] = useState('');\r\n\tconst [nodeList, setNodeList] = useState(\r\n\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel:'工作日',\r\n\t\t\t\t\tvalue:1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel:'休息日',\r\n\t\t\t\t\tvalue:2\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel:'删除计算日',\r\n\t\t\t\t\tvalue:3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel:'元旦',\r\n\t\t\t\t\tvalue:4\r\n\t\t\t\t},\r\n\t\t\t\t// 5-春节 6-清明节 7-劳动节 8-端午节 9-中秋节 10-国庆节\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel:'春节',\r\n\t\t\t\t\tvalue:5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel:'清明节',\r\n\t\t\t\t\tvalue:6\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel:'劳动节',\r\n\t\t\t\t\tvalue:7\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel:'端午节',\r\n\t\t\t\t\tvalue:8\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel:'中秋节',\r\n\t\t\t\t\tvalue:9\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel:'国庆节',\r\n\t\t\t\t\tvalue:10\r\n\t\t\t\t}\r\n\t\t\t]);\r\n\t\r\n\t  const [isOpen, setIsOpen] = useState(false);\r\n\t  const [dateList, setDateList] = useState([]);\r\n\t  const [NewdateType, setNewdateType] = useState('');\r\n\t  const [yearMonths, setYearMonths] = useState([]);\r\n\t  const [month, setMonth] = useState(dayjs().format('YYYY-MM'));\r\n\t  const [value, setValue] = useState(dayjs().format('YYYY-MM'));\r\n\t  const [dateTypeval, setDateTypeval] = useState('请选择');\r\n\t  const [dateTypeOpen, setDateTypeOpen] = useState(false);\r\n\t  const [titleName, setTitleName] = useState('');\r\n\t  const [start, setStart] = useState('');\r\n\t  const [end, setEnd] = useState('');\r\n\t  const [dateType, setDateType] = useState('');\r\n\t  const [dateTypeTwo, setDateTypeTwo] = useState('');\r\n\t  const [dateTypeThree, setDateTypeThree] = useState('');\r\n\t  const [dateTypeFour, setDateTypeFour] = useState('');\r\n\t  const [dateTypeFive, setDateTypeFive] = useState('');\r\n\t  const [dateTypeSix, setDateTypeSix] = useState('');\r\n\t  const [dateTypeSeven, setDateTypeSeven] = useState('');\r\n\t  const [dateTypeEight, setDateTypeEight] = useState('');\r\n\t  const [dateTypeNine, setDateTypeNine] = useState('');\r\n\t  const [dateTypeTen, setDateTypeTen] = useState('');\n\tconst calendarRef = React.createRef();\r\n\tuseEffect(() =>{\r\n\t\tgetDateList()\r\n\t\tvar currentDate = new Date();\r\n\t\tvar currentYear = currentDate.getFullYear();\r\n\t\t\r\n\t\tvar yearMonths = [];\r\n\t\tfor (var i = 0; i < 12; i++) {\r\n\t\t\tvar date = new Date(currentYear, i, 1);\r\n\t\t\tvar year = date.getFullYear();\r\n\t\t\tvar month = date.getMonth() + 1;\r\n\t\t\t\r\n\t\t\tif(month==10||month==11||month==12){\r\n\t\t\t\t// month\r\n\t\t\t}else{\r\n\t\t\t\tmonth ='0'+month\r\n\t\t\t}\r\n\t\t\tconsole.log(month)\r\n\t\t\tyearMonths.push(year +'-' + month);\r\n\t\t\tsetYearMonths(yearMonths)\r\n\t\t}\r\n\t},[])\r\n\tconst getDay=(startDate, endDate)=> {\r\n\t\tvar result = new Array();\r\n\t\tvar ab = startDate.split(\"-\")\r\n\t\tconsole.log(ab)\r\n\t\tvar ae = endDate.split(\"-\")\r\n\t\tvar db = new Date()\r\n\t\tdb.setUTCFullYear(ab[0], ab[1]-1, ab[2])\r\n\t\tvar de = new Date()\r\n\t\tde.setUTCFullYear(ae[0], ae[1]-1, ae[2])\r\n\t\tvar unixDb=db.getTime()\r\n\t\tvar unixDe=de.getTime()\r\n\t\tfor(var k=unixDb;k<=unixDe;){\r\n\t\t\tresult.push(formatDate(new Date(parseInt(k)), 'yyyy-MM-dd'))\r\n\t\t\tk=k+24*60*60*1000\r\n\t\t}\r\n\t\tconsole.log(result)\r\n\t\treturn result\r\n\t}\r\n\t// 日期格式化\r\n\tconst formatDate = (date, fmt) => {\r\n\t\tif (date === \"\" || date === null || date === undefined) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (fmt === \"\" || fmt === null || fmt === undefined) {\r\n\t\t\tfmt = \"yyyy-MM\";\r\n\t\t}\r\n\t\tdate = new Date(date);\r\n\t\tvar o = {\r\n\t\t\t\"M+\": date.getMonth() + 1, // 月份\r\n\t\t\t\"d+\": date.getDate(), // 日\r\n\t\t\t\"h+\": date.getHours(), // 小时\r\n\t\t\t\"m+\": date.getMinutes(), // 分\r\n\t\t\t\"s+\": date.getSeconds(), // 秒\r\n\t\t\t\"q+\": Math.floor((date.getMonth() + 3) / 3), // 季度\r\n\t\t\tS: date.getMilliseconds(), // 毫秒\r\n\t\t};\r\n\t\tif (/(y+)/.test(fmt))\r\n\t\t\tfmt = fmt.replace(\r\n\t\t\t\tRegExp.$1,\r\n\t\t\t\t(date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\r\n\t\t\t);\r\n\t\tfor (var k in o) {\r\n\t\t\tif (new RegExp(\"(\" + k + \")\").test(fmt))\r\n\t\t\tfmt = fmt.replace(\r\n\t          RegExp.$1,\r\n\t          RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn fmt;\r\n\t}\r\n\tconst mergeDateRanges=(dates) => {\r\n\t    // 先根据 dateType 和 date 进行排序\r\n\t    dates.sort((a, b) => {\r\n\t        if (a.dateType !== b.dateType) {\r\n\t            return a.dateType - b.dateType;\r\n\t        }\r\n\t        return new Date(a.date) - new Date(b.date);\r\n\t    });\r\n\t\r\n\t    let ranges = [];\r\n\t    let currentRange = null;\r\n\t    let id = 0;\r\n\t\r\n\t    for (const date of dates) {\r\n\t        if (!currentRange || currentRange.dateType !== date.dateType) {\r\n\t            // 如果当前范围不存在，或者 dateType 发生变化，则开始新的范围\r\n\t            currentRange = { start: date.date, end: date.date, dateType: date.dateType, id: id++,allDay: true };\r\n\t            ranges.push(currentRange);\r\n\t        } else {\r\n\t            // 如果是连续的日期，更新当前范围的结束日期\r\n\t            if (new Date(currentRange.end).getTime() + 86400000 === new Date(date.date).getTime()) {\r\n\t                currentRange.end = date.date;\r\n\t            } else {\r\n\t                // 如果不连续，开始新的范围\r\n\t                currentRange = { start: date.date, end: date.date, dateType: date.dateType, id: id++,allDay: true };\r\n\t                ranges.push(currentRange);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    // 根据dateType添加标题\r\n\t    ranges.forEach(range => {\r\n\t        if (range.dateType === 1) {\r\n\t            range.title = '工作日';\r\n\t        } else if (range.dateType === 2) {\r\n\t            range.title = '休息日';\r\n\t        } else if (range.dateType === 3) {\r\n\t            range.title = '删除计算日';\r\n\t        } else if (range.dateType === 4) {\r\n\t            range.title = '元旦';\r\n\t        }else if (range.dateType === 5) {\r\n\t            range.title = '春节';\r\n\t        }else if (range.dateType === 6) {\r\n\t            range.title = '清明节';\r\n\t        }else if (range.dateType === 7) {\r\n\t            range.title = '劳动节';\r\n\t        }else if (range.dateType === 8) {\r\n\t            range.title = '端午节';\r\n\t        }else if (range.dateType === 9) {\r\n\t            range.title = '中秋节';\r\n\t        }else if (range.dateType === 10) {\r\n\t            range.title = '国庆节';\r\n\t        }\r\n\t        // 删除dateType，因为它不再需要\r\n\t        delete range.dateType;\r\n\t    });\r\n\t\r\n\t    return ranges;\r\n\t}\r\n\t\r\n\tconst addDays=(date, days) =>{\r\n\t\tlet result = new Date(date);\r\n\t\tresult.setDate(result.getDate() + days);\r\n\t\treturn result.toISOString().split('T')[0];\r\n\t}\r\n\tconst addDayToEndDates=(events)=> {\r\n\t\treturn events.map(event => {\r\n\t\t\t// 解析当前end日期\r\n\t\t\tlet endDate = new Date(event.end);\r\n\t\t\t// 在日期上加上一天\r\n\t\t\tendDate.setDate(endDate.getDate() + 1);\r\n\t\t\t// 更新event对象的end属性\r\n\t\t\tevent.end = endDate.toISOString().split('T')[0];\r\n\t\t\treturn event;\r\n\t\t});\r\n\t}\r\n\t// 查询基线负荷日期\n\tconst getDateList=() =>{\n\t\t// 1-工作日 2-非工作日 3-删除计算日 4-元旦 5-春节 6-清明节 7-劳动节 8-端午节 9-中秋节 10-国庆节\n\t\thttp.post('demand_resp/calendar/getDateList?month='+month).then(res =>{\n\t\t\tconsole.log(res)\n\t\t\tif(res.data.code==200){\n\t\t\t\tlet dates = res.data.data\r\n\t\t\t\tlet dateRanges = mergeDateRanges(dates);\r\n\t\t\t\t\r\n\t\t\t\t// 输出结果\r\n\t\t\t\t// console.log(dateRanges);\r\n\t\t\t\tlet updatedEvents =addDayToEndDates(dateRanges)\r\n\t\t\t\t// console.log(updatedEvents)\r\n\t\t\t\tsetEvents(updatedEvents)\n\t\t\t}\n\t\t}).catch(err =>{\n\t\t\tconsole.log(err)\n\t\t})\n\t\t\n\t}\n\tconst handleSelect = ({ start, end }) => {\n\t\t // alert(0)\n\t    const title = window.prompt('New Event name')\n\t    // console.log(start, end)\n\t    debugger\n\t    if (title){\r\n\t\t\tsetEvents(...events,{\r\n\t\t\t      start,\r\n\t\t\t      end,\r\n\t\t\t      title,\r\n\t\t\t    });\r\n\t\t}\r\n\t\t  \n\t}\n\t// 编辑\r\n\tconst edit =() =>{\r\n\t\tsetIsOpen(true)\r\n\t}\r\n\t// 选择属性\r\n\tconst chosenode =(val) =>{\r\n\t\tconsole.log(val)\r\n\t\tsetNewdateType(val);\r\n\t\tsetDateTypeval(val);\r\n\t\tsetTitleName(val)\r\n\t}\r\n\t// 选择日期\r\n\tconst choseDate =(val) =>{\r\n\t\tconsole.log(val)\r\n\t\tsetDate(val);\r\n\t\tsetMonth(val);\r\n\t\tsetValue(val);\r\n\t\tsetCurrentDate(val);\r\n\t\tcalendarRef.current.getApi().gotoDate(val);\r\n\t}\r\n\tuseEffect(() =>{\r\n\t\tgetDateList()\r\n\t},[month])\r\n\t// 返回\r\n\tconst area = () =>{\r\n\t\tprops.history.push({\r\n\t\t\tpathname: '/Sarguments',\r\n\t\t});\r\n\t}\n\t\n\t\t\r\n\t\tconst renderEventContent =(eventInfo)=> {\r\n\t\t  return (\r\n\t\t    <>\r\n\t\t      <b>{eventInfo.timeText}</b>\r\n\t\t      <i>{eventInfo.event.title}</i>\r\n\t\t    </>\r\n\t\t  )\r\n\t\t} \r\n\t\tconst handleOk = () => {\r\n\t\t\tsetIsModalOpen(false)\r\n\t\t};\r\n\t\t\r\n\t\tconst handleCancel = () => {\r\n\t\t\tsetIsModalOpen(false)\r\n\t\t};\r\n\t\t// 编辑\r\n\t\tconst handleOk1 = () => {\r\n\t\t    setIsModalOpen(false);\r\n\t\t\t// console.log(dateList)\r\n\t\t\thttp.post('demand_resp/calendar/editDateType',{\r\n\t\t\t\t\"dateList\": dateList,\r\n\t\t\t\t\"dateType\": NewdateType\r\n\t\t\t}).then(res =>{\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t\tif(res.data.code==200){\r\n\t\t\t\t\tsetDateTypeval('')\r\n\t\t\t\t\tmessage.success('编辑成功')\r\n\t\t\t\t\tgetDateList()\r\n\t\t\t\t\tsetIsOpen(false)\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmessage.info(res.data.msg)\r\n\t\t\t\t}\r\n\t\t\t}).catch(err =>{\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t\t};\r\n\t\tconst handleCancel1 =() =>{\r\n\t\t\tsetIsOpen(false);\r\n\t\t\tsetDateTypeval('')\r\n\t\t}\n\t\tconst handleSelectSlot =({ event, start, end, allDay }) =>{\r\n\t\t\tsetDateTypeOpen(true);\r\n\t\t\tsetStart(dayjs(start).format('YYYY-MM-DD'));\r\n\t\t\tsetEnd(dayjs(end).format('YYYY-MM-DD'))\n\t\t\t\r\n\t\t\tlet start1 = dayjs(start).format('YYYY-MM-DD')\r\n\t\t\tlet end1 = dayjs(end).format('YYYY-MM-DD')\n\t\t\t\n\t\t}\n\t\t\n\t\tconst handleToday = () => {\r\n\t\t\t// onNavigate('TODAY')\r\n\t\t\t\r\n\t\t\tsetDate(dayjs().format('YYYY-MM'));\r\n\t\t\tsetValue(dayjs().format('YYYY-MM'));\r\n\t\t\tsetMonth(dayjs().format('YYYY-MM'))\r\n\t\t\tcalendarRef.current.getApi().gotoDate(dayjs().format('YYYY-MM'));\r\n\t\t\t// setdate\r\n\t\t}\r\n\t\t// 属性编辑\r\n\t\tconst handleOk2 =() =>{\r\n\t\t\t\r\n\t\t\tconsole.log(start)\r\n\t\t\tconst weekday = [7, 1, 2, 3, 4,5,6];\r\n\t\t\tlet newList =getDay(start,end)\r\n\t\t\tconst lastItem = newList.pop();\r\n\t\t\t// console.log(newList);\r\n\t\t\tlet list = []\r\n\t\t\t\r\n\t\t\tfor(var i=0;i<newList.length;i++){\r\n\t\t\t\tlet day = newList[i].substring(5,7)\r\n\t\t\t\tconsole.log(newList[i].substring(5,7))\r\n\t\t\t\t\r\n\t\t\t\tlist.push({\r\n\t\t\t\t\tdateType:titleName,\r\n\t\t\t\t\tdate:newList[i],\r\n\t\t\t\t\tdayOfWeek:weekday[new Date(newList[i]).getDay()],\r\n\t\t\t\t\tyear: newList[i].substr(0,4),\r\n\t\t\t\t\tmonth: newList[i].substr(5,10).charAt(0) === '0'?Number(newList[i].substr(6,10)):Number(newList[i].substr(5,7)),\r\n\t\t\t\t\tday: newList[i].substr(8,10).charAt(0) === '0'?Number(newList[i].substr(9,10)):Number(newList[i].substr(8,10)),\r\n\t\t\t\t\tupdateBy: null,\r\n\t\t\t\t\tupdateTime: null,\r\n\t\t\t\t})\r\n\t\t\t\t// console.log(weekday[new Date(newList[i]).getDay()])\r\n\t\t\t}\r\n\t\t\tconsole.log(list)\r\n\t\t\tsetEvents(...events,{\r\n\t\t\t\t\t\tstart:start,\r\n\t\t\t\t\t\tend:end,\r\n\t\t\t\t\t\ttitle:titleName==1?'工作日':titleName==2?'休息日' :titleName==3?'删除计算日' :\r\n\t\t\t\t\t\ttitleName==4?'元旦' :titleName==5?'春节' :titleName==6?'清明节' :titleName==7?'劳动节' \r\n\t\t\t\t\t\t:titleName==8?'端午节' :titleName==9?'中秋节':'国庆节',\r\n\t\t\t\t\t})\r\n\t\t\tsetDateTypeOpen(false)\r\n\t\t\thttp.post('demand_resp/calendar/editDateType',{\r\n\t\t\t\t\"dateList\": newList,\r\n\t\t\t\t\"dateType\": titleName\r\n\t\t\t}).then(res =>{\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t\tif(res.data.code==200){\r\n\t\t\t\t\tsetDateTypeval('');\r\n\t\t\t\t\tmessage.success('编辑成功')\r\n\t\t\t\t\tgetDateList()\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmessage.info(res.data.msg)\r\n\t\t\t\t}\r\n\t\t\t}).catch(err =>{\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\t\tconst handleCancel2 =() =>{\r\n\t\t\tsetDateTypeOpen(false);\r\n\t\t\tsetDateTypeval('')\r\n\t\t}\r\n\t\tconst MyToolbar = props => {\n\t\t\tconst { label, onNavigate, onView } = props\n\n\t\t\tconst handlePrev = () => {\n\t\t\t\tonNavigate('PREV')\n\t\t\t}\n\n\t\t\t\n\n\t\t\tconst handleNext = () => {\n\t\t\t\tonNavigate('NEXT')\n\n\t\t\t}\n\n\t\t\tconst handleViewChange = event => {\n\t\t\t\t// onView(event.target.value)\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div style={{padding:'10px 15px'}}>\n\t\t\t \n\t\t\t\t\t<Button type=\"button\" ghost onClick={handleToday}>\n\t\t\t\t\t\t今天\n\t\t\t\t\t</Button>\n\t\t\t\t\t\n\t\t\t\t\t<span style={{color:'#FFF',marginLeft:200}}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\r\n\t\tconst eventClick =(eventInfo,data) =>{\r\n\t\t\tlet event = eventInfo.event._def\r\n\t\t\tlet dayDate = eventInfo.event._instance.range\r\n\t\t\tlet start = dayjs(dayDate.start).format('YYYY-MM-DD')\r\n\t\t\tlet end = dayjs(dayDate.end).format('YYYY-MM-DD')\r\n\t\t\tlet newList = []\r\n\t\t\tnewList.push(start)\r\n\t\t\tnewList.push(end)\r\n\t\t\t\r\n\t\t\tconst sameItems = [];\r\n\t\t\tfor (let i = 0; i < allTypeList.length; i++) {\r\n\t\t\t  for (let j = 0; j < newList.length; j++) {\r\n\t\t\t    if (allTypeList[i].date === newList[j]) {\r\n\t\t\t\t\tsameItems.push(allTypeList[i]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t    }\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t\tconst weekday = [7, 1, 2, 3, 4,5,6];\r\n\t\t\tlet newList1 = getDay(start,end)\r\n\t\t\t// console.log(newList1)\r\n\t\t\tsetDateList(newList1)\r\n\t\t\tconst lastItem1= newList1.pop();\r\n\t\t\tlet list1 = []\r\n\t\t\t\r\n\t\t\tfor(var i=0;i<newList1.length;i++){\r\n\t\t\t\tlet day = newList1[i].substring(5,7)\r\n\t\t\t\tlist1.push({\r\n\t\t\t\t\tdateType:event.title=='工作日'?1:event.title=='休息日'?2:event.title=='休息日'?2:event.title=='删除计算日'?3:event.title=='元旦'?4\r\n\t\t\t\t\t:event.title=='春节'?5:event.title=='清明节'?6:event.title=='劳动节'?7:event.title=='端午节'?8:event.title=='中秋节'?9\r\n\t\t\t\t\t:event.title=='国庆节'?10:'',\r\n\t\t\t\t\tdate:newList1[i],\r\n\t\t\t\t\tdayOfWeek:weekday[new Date(newList1[i]).getDay()],\r\n\t\t\t\t\tyear: newList1[i].substr(0,4),\r\n\t\t\t\t\tmonth: newList1[i].substring(5,7).charAt(0) == 0?Number(newList1[i].substring(6,7)):Number(newList1[i].substring(5,7)),\r\n\t\t\t\t\tday: newList1[i].substr(8,10).charAt(0) == '0'?Number(newList1[i].substr(9,10)):Number(newList1[i].substr(8,10)),\r\n\t\t\t\t\tupdateBy: null,\r\n\t\t\t\t\tupdateTime: null,\r\n\t\t\t\t})\r\n\t\t\t\t// console.log(weekday[new Date(newList[i]).getDay()])\r\n\t\t\t}\r\n\t\t\tsetIsModalOpen(true);\r\n\t\t\tsetTitle(event.title);\r\n\t\t\tconsole.log(list1)\r\n\t\t\thttp.post('demand_resp/calendar/convertDateStr',list1\r\n\t\t\t).then(res =>{\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t\tif(res.data.code==200){\r\n\t\t\t\t\tsetContent(res.data.data)\r\n\t\t\t\t}\r\n\t\t\t}).catch(err =>{\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t\t}\r\n\t\tconst selectClick =(event ) =>{\r\n\t\t\tconsole.log(event)\r\n\t\t\tif(event.startStr&&event.endStr){\r\n\t\t\t\tsetStart(event.startStr);\r\n\t\t\t\tsetEnd(event.endStr);\r\n\t\t\t\tsetDateTypeOpen(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\tuseEffect(() =>{\r\n\t\t\tconsole.log(start)\r\n\t\t},[start])\r\n\t\tconst eventDrop =() =>{\r\n\t\t}\r\n\t\t// 下个月\r\n\t\tconst getNext =() =>{\r\n\t\t\t\r\n\t\t}\r\n\t\t// 上个月\r\n\t\tconst getPrev =(event) =>{\r\n\t\t\tconsole.log(event)\r\n\t\t}\r\n\t\tconst getToday =() =>{\r\n\t\t\talert(0)\r\n\t\t}\n\t\treturn (\r\n\t\t\t<div style={{height:'calc(100% - 16px)'}} className=\"newDatebody\">\r\n\t\t\t\t<div className=\"newDatetitle\"><a style={{color:'#FFF'}}  onClick={area}>\r\n\t\t\t\t<LeftCircleOutlined style={{marginRight:10}} />返回</a></div>\r\n\t\t\t\t<div className=\"newDate\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"newDateName\">\r\n\t\t\t\t\t<Button  ghost onClick={handleToday}>\r\n\t\t\t\t\t\t今天\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t// placeholder=''\r\n\t\t\t\t\t\t\tstyle={{width:'119px',marginLeft:20}}\r\n\t\t\t\t\t\t\tonChange={choseDate}\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tyearMonths.map(res =>{\r\n\t\t\t\t\t\t\t\t\treturn <Option key={res} value={res}>{res}</Option>\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"Sarguments-FullCalendar\">\r\n\t\t\t\t\t\t<FullCalendar\r\n\t\t\t\t\t\t\tlocale={locale}\r\n\t\t\t\t\t\t\tplugins={[dayGridPlugin, interactionPlugin]}\r\n\t\t\t\t\t\t\tinitialView='dayGridMonth'\r\n\t\t\t\t\t\t\teditable // false之后不可以拖拽\r\n\t\t\t\t\t\t\tselectable\r\n\t\t\t\t\t\t\tevents={events}\r\n\t\t\t\t\t\t\teventContent={renderEventContent}\r\n\t\t\t\t\t\t\teventClick={eventClick} // 事项点击事件\r\n\t\t\t\t\t\t\t// dayClick ={selectdayClick}\r\n\t\t\t\t\t\t\tref={calendarRef}\r\n\t\t\t\t\t\t\tdateClick={selectClick}\r\n\t\t\t\t\t\t\t//设置是否可被单击或者拖动选择\r\n\t\t\t\t\t\t\tselectable= {true}\r\n\t\t\t\t\t\t\tselect={selectClick} //选中日历格事件\r\n\t\t\t\t\t\t\teditable \t//可以拖拽\r\n\t\t\t\t\t\t\ttoday={getToday}\r\n\t\t\t\t\t\t\theaderToolbar={{\r\n\t\t\t\t\t\t\t        left: '',\r\n\t\t\t\t\t\t\t        center: '', // 移除标题部分\r\n\t\t\t\t\t\t\t        right: ''\r\n\t\t\t\t\t\t\t      }}\r\n\t\t\t\t\t\t\t// height={700}\r\n\t\t\t\t\t\t\t// date={this.state.currentDate}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Modal title=\"属性编辑\" visible={dateTypeOpen} \r\n\t\t\t\t\twrapClassName=\"Modal-visible\" \r\n\t\t\t\t\tonOk={handleOk2} onCancel={handleCancel2}\r\n\t\t\t\t\t\t centered\r\n\t\t\t\t\t\t footer={[\r\n\t\t\t\t\t\t // 重点：定义右下角 \r\n\t\t\t\t\t\t <Button ghost  onClick={handleCancel2}>取消</Button>,\r\n\t\t\t\t\t\t <Button key=\"submit\" type=\"primary\" onClick={handleOk2}>\r\n\t\t\t\t\t\t 确定\r\n\t\t\t\t\t\t </Button> ]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tplaceholder=\"请选择\"\r\n\t\t\t\t\t\t\tstyle={{width:'100%',marginBottom:30}}\r\n\t\t\t\t\t\t\tonChange={chosenode}\r\n\t\t\t\t\t\t\tvalue={dateTypeval}\r\n\t\t\t\t\t\t >\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tnodeList.length &&nodeList.map(res =>{\r\n\t\t\t\t\t\t\t\t\treturn <Option key={res.value} value={res.value}>{res.label}</Option>\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t\t<Modal title={title} mask={false} visible={isModalOpen} onOk={handleOk} onCancel={handleCancel}\r\n\t\t\t\t\t\tfooter={null} centered\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p className=\"titlename\">{content}</p>\r\n\t\t\t\t\t\t<div className=\"blockName\">\r\n\t\t\t\t\t\t\t<Button type=\"text\" \r\n\t\t\t\t\t\t\t\tonClick={edit}\r\n\t\t\t\t\t\t\tstyle={{color:'#FFF',background:'#0F9D90',marginTop:40}} block ghost>\r\n\t\t\t\t\t\t\t      编辑\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t\t<Modal title=\"编辑\" \r\n\t\t\t\t\tcentered visible={isOpen} onOk={handleOk1} onCancel={handleCancel1}\r\n\t\t\t\t\t\t// footer={null}\r\n\t\t\t\t\t\twrapClassName=\"Modal-visible\" \r\n\t\t\t\t\t\tfooter={[\r\n\t\t\t\t\t\t// 重点：定义右下角 \r\n\t\t\t\t\t\t<Button ghost onClick={handleCancel1}>取消</Button>,\r\n\t\t\t\t\t\t<Button key=\"submit\" type=\"primary\" onClick={handleOk1}>\r\n\t\t\t\t\t\t确定\r\n\t\t\t\t\t\t</Button> ]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tplaceholder=\"请选择\"\r\n\t\t\t\t\t\t\tstyle={{width:'100%',marginBottom:30}}\r\n\t\t\t\t\t\t\tonChange={chosenode}\r\n\t\t\t\t\t\t\tvalue={dateTypeval}\r\n\t\t\t\t\t\t >\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tnodeList.length &&nodeList.map(res =>{\r\n\t\t\t\t\t\t\t\t\treturn <Option key={res.value} value={res.value}>{res.label}</Option>\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\t\n\t\t)\n\t}\n\nexport default  NewDate\r\n\r\n\r\n\r\n\r\n// <select onChange={handleViewChange}>\n\t\t\t\t\t\t\n// \t\t\t\t\t</select>"],"names":["Option","Select","props","useState","events","setEvents","dayjs","startOf","toDate","setCurrentDate","allTypeList","setDate","isModalOpen","setIsModalOpen","title","setTitle","content","setContent","label","value","nodeList","isOpen","setIsOpen","dateList","setDateList","NewdateType","setNewdateType","yearMonths","setYearMonths","format","month","setMonth","setValue","dateTypeval","setDateTypeval","dateTypeOpen","setDateTypeOpen","titleName","setTitleName","start","setStart","end","setEnd","calendarRef","React","useEffect","getDateList","currentYear","Date","getFullYear","i","date","year","getMonth","console","log","push","getDay","startDate","endDate","result","Array","ab","split","ae","db","setUTCFullYear","de","unixDb","getTime","unixDe","k","formatDate","parseInt","fmt","undefined","o","getDate","getHours","getMinutes","getSeconds","Math","floor","S","getMilliseconds","test","replace","RegExp","$1","substr","length","http","then","res","data","code","dateRanges","dates","sort","a","b","dateType","ranges","currentRange","id","allDay","forEach","range","mergeDateRanges","updatedEvents","map","event","toISOString","addDayToEndDates","catch","err","chosenode","val","handleOk1","message","msg","handleCancel1","handleToday","current","getApi","gotoDate","handleOk2","weekday","newList","list","pop","substring","dayOfWeek","charAt","Number","day","updateBy","updateTime","handleCancel2","selectClick","startStr","endStr","style","height","className","color","onClick","history","pathname","marginRight","ghost","width","marginLeft","onChange","locale","plugins","dayGridPlugin","interactionPlugin","initialView","editable","selectable","eventContent","eventInfo","timeText","eventClick","_def","dayDate","_instance","sameItems","j","newList1","list1","ref","dateClick","alert","left","center","right","visible","wrapClassName","onOk","onCancel","centered","footer","type","placeholder","marginBottom","mask","background","marginTop","block"],"sourceRoot":""}