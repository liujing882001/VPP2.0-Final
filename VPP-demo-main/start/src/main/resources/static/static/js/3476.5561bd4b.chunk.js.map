{"version":3,"file":"static/js/3476.5561bd4b.chunk.js","mappings":"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","sources":["views/Forecasting/demandForecast/component/report-modal/index.js","views/Forecasting/demandForecast/component/modal/index.js","views/Forecasting/demandForecast/component/strategy-modal/index.js","views/Forecasting/demandForecast/component/chart01/index.js","views/Forecasting/demandForecast/component/chart02/index.js","views/Forecasting/demandForecast/component/chart03/index.js","views/Forecasting/demandForecast/index.js","views/Forecasting/demandForecast/utils/index.js"],"sourcesContent":["\r\nimport { Button, Modal,DatePicker,Input,Radio } from 'antd';\r\nimport './index.scss'\r\nimport dayjs from 'dayjs';\r\n\r\nconst { RangePicker } = DatePicker\r\nconst {Search} = Input\r\nconst ReportModal = (props) => {\r\n    const { setIsTipsModalOpen,isTipsModalOpen } = props || {}\r\n    const dateFormat = 'YYYY/MM/DD';\r\n    const onChange = (date, dateString) => {\r\n        console.log(date, dateString);\r\n      };\r\n    const handleCancel = () => {\r\n      setIsTipsModalOpen(false);\r\n    };\r\n\r\n    const onChange1 = (e) => {\r\n        console.log('radio checked', e.target.value);\r\n    };\r\n    return (\r\n        <Modal className=\"report-modal\" visible={isTipsModalOpen} footer={null} title=\"提示\" onCancel={handleCancel}>\r\n           <p className='tips-content'>是否确认按当前的申报负荷进行申报？</p>\r\n           <div className='btn-wrapper'>\r\n                <Button className='cancel-btn' onClick={handleCancel}>\r\n                    取消\r\n                </Button>\r\n                <Button className='ok-btn' onClick={handleCancel}>\r\n                    确定\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\nexport default ReportModal;","\r\nimport { Button, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { renderNodeStatus,renderResponseType,renderResponseLevel } from '../../utils'\r\nimport classNames from 'classnames'\r\nimport './index.scss'\r\nimport ReportModal from '../report-modal'\r\nconst CommonModal = (props) => {\r\n    const { isModalOpen,setIsModalOpen,taskInfo,nodeList } = props || {}\r\n    const [isTipsModalOpen, setIsTipsModalOpen] = useState(false);\r\n\r\n    const handleCancel = () => {\r\n      setIsModalOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal className=\"expand-modal\" visible={isModalOpen} footer={null} closable={false}>\r\n                <i className='close-icon' onClick={() => handleCancel()}/>\r\n                <div className='demand-forecast_content_right_content'>\r\n                    <div className='demand-forecast-right-top'>\r\n                        <div className='right-img'></div>\r\n                        <span className='right-text'>需求响应平台</span>\r\n                    </div>\r\n                    <div className='demand-forecast-right-center'>\r\n                        <div className='center-img-top'></div>\r\n                        <div className='model-wrap'>\r\n                            <div className='modal-img'></div>\r\n                            <span className='model-text'>能源大模型</span>\r\n                        </div>\r\n                     \r\n                    </div>\r\n                    <div className='demand-forecast-right-bottom'>\r\n                        <div className='arrow-bottom'></div>\r\n                    </div>\r\n                    <div className='left-text-wrap'>\r\n                        <p className='left-text'>响应时段：{taskInfo?.rsDate}</p>\r\n                        <p className='left-text'>负荷需求(kW)：{taskInfo?.respLoad}kW</p>\r\n                        <p className='left-text'>响应类型：{renderResponseType(taskInfo?.respType)}</p>\r\n                        <p className='left-text'>响应级别：{renderResponseLevel(taskInfo?.respLevel)}</p>\r\n                    </div>\r\n                    <div className='right-text-wrap'>\r\n                        <p className='other-right-text'>需求响应状态：{111}</p>\r\n                        <p className='other-right-text'>申报负荷(kW)：{taskInfo?.declareLoad}kW</p>\r\n                        <p className='other-right-text'>调节负荷(kW)：{taskInfo?.adjustLoad}kW</p>\r\n                        <p className='other-right-text'>预测负荷(kW)：{taskInfo?.forecastLoad}kW</p>\r\n                    </div>\r\n                </div>  \r\n                <div className='dots-wrapper'>\r\n                    {\r\n                        nodeList?.map((item,i) => {\r\n                            return (\r\n                                <div className='dots-1' key={i}>\r\n                                    <div className='dots-1-header'>\r\n                                        <div className={classNames('round',{'online-status':item?.online})}></div>\r\n                                        <span className='dots-1-header-text'>{item?.nodeName}</span>\r\n                                    </div>\r\n                                    <div className='dots1-content'>\r\n                                        <p className='dots1-text'>状态：{renderNodeStatus(item?.drsStatus) || '-'}</p>\r\n                                        <p className='dots1-text'>申报负荷(kW)：{item?.declareLoad}kW</p>\r\n                                        <p className='dots1-text'>调节负荷(kW)：{item?.adjustLoad}kW</p>\r\n                                        <p className='dots1-text'>预测负荷(kW)：{item?.forecastLoad}kW</p>\r\n                                        <p className='dots1-text'>响应负荷(kW)：{item?.deviceRatedLoad}kW</p>\r\n                                        <p className='dots1-text'>响应电量(kW)：{item?.reality}kW</p>\r\n                                        <p className='dots1-text'>预估收益（元）：{item?.income}元</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n        \r\n                </div>\r\n            </Modal>\r\n            <ReportModal isTipsModalOpen={isTipsModalOpen} setIsTipsModalOpen={setIsTipsModalOpen}/>\r\n        </>\r\n    );\r\n  };\r\nexport default CommonModal;\r\n\r\n\r\n","\r\nimport { Button, Modal, DatePicker,Input,Radio,message,Tooltip } from 'antd';\r\nimport axios from 'axios'\r\nimport './index.scss'\r\nimport { useEffect, useState } from 'react';\r\nimport { formatDate } from  '../../utils'\r\nimport http from '../../../../../server/server';\r\nconst StrategyModal = (props) => {\r\n    const {setIsStrategyModalOpen,selectedStrategyItem,queryStrategy,getDecisionChainList,onQueryChart } = props || {}\r\n    const { id,nodeName,noHouseholds,time,deviceName,content } = selectedStrategyItem || {}\r\n    const [temperature,setTemperature] = useState( content ? content?.substring(4,content?.length-1) : null)\r\n    const handleCancel = () => {\r\n        setTemperature(content ? content?.substring(4,content?.length) :\"\")\r\n        setIsStrategyModalOpen(false);\r\n    };\r\n\r\n    const onOK = () => {\r\n        if(temperature > 12 || temperature < 7){\r\n            message.error('出水温度范围需在7℃到12℃之间');\r\n            return\r\n        }\r\n        http.post(\"AIEnergy/strategyUpdate\", {\r\n            id,\r\n            strategyContentBefore:content ? content?.substring(4,content?.length-1):null,\r\n            strategyContent:temperature\r\n        }, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          })\r\n        .then(function (response) {\r\n            message.success('修改成功');\r\n            handleCancel()  \r\n            setTimeout(() => {\r\n                queryStrategy()\r\n                getDecisionChainList()\r\n                onQueryChart()\r\n            }, 2000);\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误strategyUpdate`)\r\n        });\r\n    }\r\n\r\n    \r\n    return (\r\n        <Modal className=\"strategy-modal\" visible={true} footer={null} title=\"冷机出水温度调节\" onCancel={handleCancel}>\r\n            <div className='strategy-modal-content'>\r\n                <div className='strategy-modal-content-left'>\r\n                    <p className='strategy-modal-content-left-item'>节点</p>\r\n                    <p className='strategy-modal-content-left-item'>户号</p>\r\n                    <p className='strategy-modal-content-left-item'>时间点</p>\r\n                    <p className='strategy-modal-content-left-item'>控制设备</p>\r\n                    <p className='strategy-modal-content-left-item'>出水温度</p>\r\n                </div>\r\n                <div className='strategy-modal-content-right'>\r\n                    <p className='strategy-modal-content-right-item'>{nodeName}</p>\r\n                    <p className='strategy-modal-content-right-item'>{noHouseholds}</p>\r\n                    <p className='strategy-modal-content-right-item'>{formatDate(time)}</p>\r\n                    <Tooltip placement=\"top\" title={deviceName?.join(',')} color='#38373F'>\r\n                        <span className='strategy-modal-content-right-item'>{deviceName?.join(',')}</span>\r\n                    </Tooltip>\r\n                    <p className='strategy-modal-content-right-item'> \r\n                        <Input\r\n                            value={temperature}\r\n                            className='temperature-input'\r\n                            onChange={(e) => {\r\n                                setTemperature(e.target.value)\r\n                            }}\r\n                            style={{width:'65px',height:'32px'}}\r\n                        />\r\n                        <span className='temperature-icon'>°C</span>\r\n                        <span className='rang-text'>（范围限制：7°C-12°C）</span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className='btn-wrapper'>\r\n                <Button className='cancel-btn' onClick={handleCancel}>\r\n                    取消\r\n                </Button>\r\n                <Button className='ok-btn' onClick={onOK}>\r\n                    确定\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n  };\r\n  export default StrategyModal;","import React, { useEffect } from 'react';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport './index.scss'\r\nconst Chart01 = (props) => {\r\n  const { timerList,baselineList,predictionList } = props || {}\r\n  const init = () => {\r\n    var chartDom = document.getElementById('main-01');\r\n    var myChart = echarts.init(chartDom);\r\n    var option;\r\n    function formatterHover(params) {\r\n        const { dataIndex } = params\r\n        const timer = timerList[dataIndex].value\r\n        const add =[]\r\n        const redLine = baselineList[dataIndex][2]\r\n        const prediction = predictionList[dataIndex].value[2]\r\n\r\n        const dataString =  \r\n           `<div style=\"padding-left:5px;height:30px;line-height:30px;color:#fff;font-size:14px\">${timer}</div>`\r\n                +\r\n\r\n                `<div style=\"display:flex;color:#fff\">\r\n                    <div style=\"display:flex;align-items:center;margin-right:125px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#C9E3FE;border-radius:6px;margin-right:6px\"></span>预测负荷(kW)</div>\r\n                    <span style=\"\">${prediction}</span>\r\n                </div>`\r\n         \r\n                +\r\n\r\n                `<div style=\"display:flex;color:#fff\">\r\n                    <div style=\"display:flex;align-items:center;margin-right:124px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#E02020;border-radius:6px;margin-right:6px\"></span>基线负荷(kW)</div>\r\n                    <span style=\"\">${redLine}</span>\r\n            </div>`\r\n    \r\n\r\n    \r\n        return dataString\r\n    }\r\n\r\n    var series = [];\r\n\r\n    series.push({\r\n        stack: true,\r\n        shading: 'lambert',\r\n        emphasis: {\r\n            label: {\r\n                show: false\r\n            }\r\n        },\r\n        type: 'bar3D',\r\n        barSize: [10, 10, 10],\r\n        data: predictionList\r\n    });\r\n\r\n    series.push({\r\n        type: 'line3D',\r\n        data: baselineList,\r\n        stack: 'stack',\r\n        lineStyle: {\r\n            width: 4,\r\n            color: 'red'\r\n        }\r\n    });\r\n\r\n    var option;\r\n    option = {\r\n        tooltip: {\r\n            trigger: 'item',\r\n            triggerOn: 'mousemove',\r\n            enterable: true, //鼠标是否可进入提示框浮层中\r\n            formatter: formatterHover, //修改鼠标悬停显示的内容\r\n            backgroundColor:'#302F39',\r\n            borderColor:'#302F39',\r\n            className:'base-tool-tip',\r\n            enterable:true\r\n        },\r\n        xAxis3D: {\r\n            name: '',\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:12\r\n            },\r\n            type: 'category',\r\n            data: timerList,\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        yAxis3D: {\r\n            name: '',\r\n            type: 'category',\r\n            data: [''],\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        zAxis3D: {\r\n            name: '功率(kW)',\r\n            type: 'value',\r\n            nameGap:30,\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:12\r\n            },\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        grid3D: {\r\n            top:0,\r\n            show: true,\r\n            axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                    width: 1\r\n                }\r\n            },\r\n            viewControl: {\r\n                // 设置默认视角\r\n                beta: 10,\r\n                alpha: 3,\r\n                // 视角距离\r\n                distance: 158\r\n            },\r\n            splitLine: {\r\n                show: false\r\n            },\r\n            axisPointer: {\r\n                show: false\r\n            },\r\n            borderWidth: 0,\r\n            boxWidth: 250,\r\n            boxDepth: 30,\r\n            boxHeight:100,\r\n            light: {\r\n            main: {\r\n                intensity: 1.2,\r\n                shadow: true\r\n            },\r\n            ambient: {\r\n                intensity: 0.3\r\n            }\r\n            }\r\n        },\r\n        emphasis: {\r\n            itemStyle: {\r\n              color: '#B1CBE2'\r\n            }\r\n        },\r\n        series: [...series]\r\n    };\r\n\r\n    option && myChart.setOption(option);\r\n\r\n    option &&  myChart.dispatchAction({\r\n        type: 'changeView',\r\n        view: {\r\n            rotate: 50,\r\n            distance: 10000000\r\n        }\r\n    });\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    init()\r\n  },[timerList,baselineList,predictionList])\r\n\r\n  \r\n  return (\r\n    <div style={{width:'100%'}}>\r\n      <div id='main-01' style={{width:'75%',height:'210px',margin:'0 auto'}}></div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Chart01;\r\n","import React, { useEffect } from 'react';\r\nimport * as echarts from 'echarts';\r\nimport './index.scss'\r\nimport 'echarts-gl';\r\n\r\nconst Chart02 = (props) => {\r\n    const { timerList,baselineList,topList,bottomList,predictionList } = props || {}\r\n    console.log(topList,bottomList)\r\n    const init = () => {\r\n    var chartDom = document.getElementById('main-02');\r\n    var myChart = echarts.init(chartDom);\r\n    var option; \r\n    \r\n    function formatterHover(params) {\r\n        const { dataIndex } = params\r\n        const timer = timerList[dataIndex].value\r\n        const redLine = baselineList[dataIndex][2]\r\n        const prediction = bottomList[dataIndex].value[2] + topList[dataIndex].value[2] ? bottomList[dataIndex].value[2] + topList[dataIndex].value[2] : predictionList[dataIndex].value[2]\r\n        const bottom = bottomList[dataIndex].value[2]\r\n\r\n        const top =  topList[dataIndex].value[2]\r\n\r\n\r\n        const normalReturn =  \r\n           `<div style=\"padding-left:5px;height:30px;line-height:30px;color:#fff;font-size:14px\">${timer}</div>`\r\n                +\r\n\r\n                `<div style=\"display:flex;color:#fff\">\r\n                    <div style=\"display:flex;align-items:center;margin-right:125px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#A2C2E3;border-radius:6px;margin-right:6px\"></span>预测负荷(kW)</div>\r\n                    <span style=\"\">${prediction}</span>\r\n                </div>`\r\n    \r\n                +\r\n\r\n                `<div style=\"display:flex;color:#fff\">\r\n                    <div style=\"display:flex;align-items:center;margin-right:124px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#E02020;border-radius:6px;margin-right:6px\"></span>基线负荷(kW)</div>\r\n                    <span style=\"\">${redLine}</span>\r\n            </div>`\r\n        \r\n        const specialReturn = \r\n            `<div style=\"padding-left:5px;height:30px;line-height:30px;color:#fff;font-size:14px\">${timer}</div>`\r\n                +\r\n\r\n                `<div style=\"display:flex;color:#fff\">\r\n                    <div style=\"display:flex;align-items:center;margin-right:125px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#A2C2E3;border-radius:6px;margin-right:6px\"></span>预测负荷(kW)</div>\r\n                    <span style=\"\">${prediction}</span>\r\n                </div>`\r\n\r\n                +\r\n                `<div style=\"display:flex;color:#fff;justify-content:space-between\">\r\n                    <div style=\"display:flex;align-items:center;margin-right:68px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#25C5AF;border-radius:6px;margin-right:6px\"></span>预测调节负荷(kW)</div>\r\n                    <span style=\"\">${top}</span>\r\n                </div>`\r\n\r\n                +\r\n                \r\n                `<div style=\"display:flex;color:#fff;justify-content:space-between\">\r\n                    <div style=\"display:flex;align-items:center;margin-right:54px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#1D4075;border-radius:6px;margin-right:6px\"></span>预测调节后负荷(kW)</div>\r\n                    <span style=\"\">${bottom}</span>\r\n                </div>`\r\n\r\n                +\r\n                \r\n                `<div style=\"display:flex;color:#fff\">\r\n                    <div style=\"display:flex;align-items:center;margin-right:124px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#E02020;border-radius:6px;margin-right:6px\"></span>基线负荷(kW)</div>\r\n                    <span style=\"\">${redLine}</span>\r\n            </div>`\r\n\r\n        return timerList[dataIndex]?.textStyle?.color === '#0F9D90' ? specialReturn : normalReturn\r\n    }\r\n\r\n    var series = [];\r\n\r\n    series.push({\r\n        stack: true,\r\n        shading: 'lambert',\r\n        emphasis: {\r\n            label: {\r\n                show: false\r\n            },\r\n        },\r\n        type: 'bar3D',\r\n        barSize: [10, 10, 10],\r\n        data: bottomList\r\n    });\r\n\r\n    series.push({\r\n        stack: true,\r\n        shading: 'lambert',\r\n        emphasis: {\r\n            label: {\r\n                show: false\r\n            },\r\n        },\r\n        type: 'bar3D',\r\n        barSize: [10, 10, 10],\r\n        data:topList \r\n    });\r\n\r\n    series.push({\r\n        type: 'line3D',\r\n        data: baselineList,\r\n        stack: 'stack',\r\n        lineStyle: {\r\n            width: 4,\r\n            color: 'red'\r\n        }\r\n    });\r\n\r\n    var option;\r\n\r\n    option = {\r\n        tooltip: {\r\n            trigger: 'item',\r\n            triggerOn: 'mousemove',\r\n            enterable: true, //鼠标是否可进入提示框浮层中\r\n            formatter: formatterHover, //修改鼠标悬停显示的内容\r\n            backgroundColor:'#302F39',\r\n            borderColor:'#302F39',\r\n            className:'base-tool-tip',\r\n            enterable:true\r\n        },\r\n        xAxis3D: {\r\n            name: '',\r\n            type: 'category',\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:13 \r\n            },\r\n            data: timerList,\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        yAxis3D: {\r\n            name: '',\r\n            type: 'category',\r\n            data: [''],\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        zAxis3D: {\r\n            name: '功率(kW)',\r\n            nameGap:30,\r\n            type: 'value',\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:12\r\n            },\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        grid3D: {\r\n            top:0,\r\n            show: true,\r\n            axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                    width: 1\r\n                }\r\n            },\r\n            viewControl: {\r\n                // 设置默认视角\r\n                beta: 10,\r\n                alpha: 3,\r\n                // 视角距离\r\n                distance: 158\r\n            },\r\n            splitLine: {\r\n                show: false\r\n            },\r\n            axisPointer: {\r\n                show: false\r\n            },\r\n            borderWidth: 0,\r\n            boxWidth: 250,\r\n            boxDepth: 30,\r\n            boxHeight:100,\r\n            light: {\r\n            main: {\r\n                intensity: 1.2,\r\n                shadow: true\r\n            },\r\n            ambient: {\r\n                intensity: 0.3\r\n            }\r\n            }\r\n        },\r\n        series: [...series]\r\n    };\r\n\r\n    option && myChart.setOption(option);\r\n\r\n    option &&  myChart.dispatchAction({\r\n        type: 'changeView',\r\n        view: {\r\n            rotate: 50,\r\n            distance: 10000000\r\n        }\r\n    });\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    init()\r\n  },[timerList,baselineList,topList,bottomList])\r\n\r\n  \r\n  return (\r\n    <div style={{width:'100%'}}>\r\n      <div id='main-02' style={{width:'75%',height:'210px',margin:'0 auto'}}></div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Chart02;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport './index.scss'\r\nconst Chart03 = (props) => {\r\n  const { timerList,realList,baselineList }= props || {} \r\n\r\n  const init = () => {\r\n    var chartDom = document.getElementById('main-03');\r\n    var myChart = echarts.init(chartDom);\r\n    var option;\r\n\r\n    var hours =  [{\r\n        value: '2024-03-05 16:15',\r\n        textStyle: {\r\n            fontSize: 8,\r\n            color:'#8F959E'\r\n        }\r\n    },{\r\n        value: '2024-03-05 16:15',\r\n        textStyle: {\r\n            fontSize: 8,\r\n            color:'#8F959E'\r\n        }\r\n    },{\r\n        value: '2024-03-05 16:15',\r\n        textStyle: {\r\n            fontSize: 8,\r\n            color:'#8F959E'\r\n        }\r\n    },{\r\n        value: '2024-03-05 16:15',\r\n        textStyle: {\r\n            fontSize: 8,\r\n            color:'#0F9D90'\r\n        }\r\n    },{\r\n        value: '2024-03-05 16:15',\r\n        textStyle: {\r\n            fontSize: 8,\r\n            color:'#0F9D90'\r\n        }\r\n    },{\r\n        value: '2024-03-05 16:15',\r\n        textStyle: {\r\n            fontSize: 8,\r\n            color:'#0F9D90'\r\n\r\n        }\r\n    },{\r\n        value: '2024-03-05 16:15',\r\n        textStyle: {\r\n            fontSize: 8,\r\n            color:'#8F959E'\r\n        }\r\n    },{\r\n        value: '2024-03-05 16:15',\r\n        textStyle: {\r\n            fontSize: 8,\r\n            color:'#8F959E'\r\n        }\r\n    }]\r\n\r\n    var redLineArr = [\r\n        [0, 0, 134],\r\n        [0, 0, 48],\r\n        [2, 0, 224],\r\n        [3, 0, 168],\r\n        [4, 0, 460],\r\n        [5, 0, 534],\r\n        [6, 0, 234],\r\n        [7, 0, 86],\r\n    ]\r\n\r\n    function formatterHover(params) {\r\n        const { dataIndex } = params\r\n        const timer = timerList[dataIndex].value\r\n        const real = realList[dataIndex].value[2]\r\n        const redLine = baselineList[dataIndex][2]\r\n        const dataString =  \r\n           `<div style=\"padding-left:5px;height:30px;line-height:30px;color:#fff;font-size:14px\">${timer}</div>`\r\n                +\r\n\r\n                `<div style=\"display:flex;color:#fff\">\r\n                    <div style=\"display:flex;align-items:center;margin-right:125px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#A2C2E3;border-radius:6px;margin-right:6px\"></span>实际负荷(kW)</div>\r\n                    <span style=\"\">${real}</span>\r\n                </div>`\r\n    \r\n                +\r\n\r\n                `<div style=\"display:flex;color:#fff\">\r\n                    <div style=\"display:flex;align-items:center;margin-right:124px\"> <span style=\"display:inline-block;width:6px;height:6px;background:#E02020;border-radius:6px;margin-right:6px\"></span>基线负荷(kW)</div>\r\n                    <span style=\"\">${redLine}</span>\r\n            </div>`\r\n\r\n    \r\n        return dataString\r\n    }   \r\n    var series = [];\r\n\r\n\r\n    series.push({\r\n        stack: true,\r\n        shading: 'lambert',\r\n        emphasis: {\r\n            label: {\r\n                show: false\r\n            }\r\n        },\r\n        type: 'bar3D',\r\n        barSize: [10, 10, 10],\r\n        // barMaxWidth: 30,\r\n        // barSize: 10,\r\n        data: realList\r\n    });\r\n\r\n\r\n    series.push({\r\n        type: 'line3D',\r\n        data: baselineList,\r\n        stack: 'stack',\r\n        lineStyle: {\r\n            width: 4,\r\n            color: 'red'\r\n        }\r\n    });\r\n\r\n    var option;\r\n    option = {\r\n        tooltip: {\r\n            trigger: 'item',\r\n            triggerOn: 'mousemove',\r\n            enterable: true, //鼠标是否可进入提示框浮层中\r\n            formatter: formatterHover, //修改鼠标悬停显示的内容\r\n            backgroundColor:'#302F39',\r\n            borderColor:'#302F39',\r\n            className:'base-tool-tip',\r\n            enterable:true\r\n        },\r\n        xAxis3D: {\r\n            name: '',\r\n            type: 'category',\r\n            data: timerList,\r\n            nameTextStyle:{\r\n                color:'#8F959E'\r\n            },\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        yAxis3D: {\r\n            name: '',\r\n            type: 'category',\r\n            data: [''],\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        zAxis3D: {\r\n            name: '功率(kW)',\r\n            nameGap:30,\r\n            type: 'value',\r\n            nameTextStyle:{\r\n                color:'#8F959E',\r\n                fontSize:12\r\n            },\r\n            axisLine:{\r\n                show:true,\r\n                interval:0,\r\n                lineStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            },\r\n            axisLabel:{\r\n                interval:0,\r\n                textStyle:{\r\n                    color:'#8F959E'\r\n                }\r\n            }\r\n        },\r\n        grid3D: {\r\n            top:0,\r\n            show: true,\r\n            axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                    width: 1\r\n                }\r\n            },\r\n            viewControl: {\r\n                // 设置默认视角\r\n                beta: 10,\r\n                alpha: 3,\r\n                // 视角距离\r\n                distance: 158\r\n            },\r\n            splitLine: {\r\n                show: false\r\n            },\r\n            axisPointer: {\r\n                show: false\r\n            },\r\n            borderWidth: 0,\r\n            boxWidth: 250,\r\n            boxDepth: 30,\r\n            boxHeight:100,\r\n            light: {\r\n            main: {\r\n                intensity: 1.2,\r\n                shadow: true\r\n            },\r\n            ambient: {\r\n                intensity: 0.3\r\n            }\r\n            }\r\n        },\r\n        series: [...series]\r\n    };\r\n\r\n    option && myChart.setOption(option);\r\n\r\n    option &&  myChart.dispatchAction({\r\n        type: 'changeView',\r\n        view: {\r\n            rotate: 50,\r\n            distance: 10000000\r\n        }\r\n    });\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    init()\r\n  },[timerList,realList,baselineList])\r\n\r\n  \r\n  return (\r\n    <div style={{width:'100%'}}>\r\n      <div id='main-03' style={{width:'75%',height:'210px',margin:'0 auto'}}></div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Chart03;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Select, Button, DatePicker,Tooltip,message,TimePicker,Skeleton,Table } from 'antd'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { calcNum } from './utils/index'\r\nimport dayjs from 'dayjs';\r\nimport CommonModal from './component/modal'\r\nimport StrategyModal from './component/strategy-modal/index'\r\nimport Chart01 from './component/chart01/index'\r\nimport Chart02 from './component/chart02/index'\r\nimport Chart03 from './component/chart03/index'\r\nimport { jsPlumb } from \"jsplumb\"; \r\n\r\nimport classNames from 'classnames';\r\nimport { mapStrategyName,\r\n         formatDate,\r\n         isTimeDifferenceTwoHours,\r\n         renderResponseType,\r\n         renderResponseLevel,\r\n         renderResponseStatus,\r\n         renderNodeStatus,\r\n         calcEndDate,\r\n         renderDeclareLoad,\r\n         renderAdjustLoad\r\n} from './utils'\r\nimport axios from 'axios'\r\n\r\nimport './index.scss'\r\n\r\nimport weekday from \"dayjs/plugin/weekday\"\r\nimport localeData from \"dayjs/plugin/localeData\"\r\nimport http from '../../../server/server';\r\n\r\ndayjs.extend(weekday)\r\ndayjs.extend(localeData)\r\n\r\n\r\nconst { RangePicker } = TimePicker;\r\n\r\nconst DemandForecast = () => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isStrategyModalOpen, setIsStrategyModalOpen] = useState(false);\r\n    const [currentRespId, setCurrentRespId] = useState(null);\r\n    const [taskNumberList,setTaskNumberList] = useState([])\r\n    const [taskStatus,setTaskStatus] = useState('-1')\r\n    const [responseType,setResponseType] = useState('-1')\r\n    const [strategyList,setStrategyList] = useState([])\r\n    const [logList,setLogList] = useState([])\r\n    const [selectedStrategyItem,setSelectedStrategyItem] =  useState({})\r\n\r\n    const [timerList,setTimerList] = useState([])\r\n    const [colorTimerList,setColorTimerList] = useState([])\r\n    const [baselineList,setBaselineList] = useState([])\r\n    const [predictionList,setPredictionList] = useState([])\r\n    const [realList,setRealList] = useState([])\r\n    const [bottomList,setBottomList] = useState([])\r\n    const [topList,setTopList] = useState([])\r\n\r\n    const [startTime, setStartTime] = useState(null);\r\n    const [endTime, setEndTime] = useState(null);\r\n    const [currentTime,setCurrentTime] = useState('')\r\n    const [allTaskList,setAllTaskList] = useState([])\r\n    const [nodeId,setNodeId] = useState('')\r\n    const [nodeList,setNodeList] = useState([])\r\n    const [taskInfo,setTaskInfo] = useState({})\r\n    const [allNodeList,setAllNodeList] = useState([])\r\n    const [sTime,setSTime] =  useState('')\r\n    const [eTime,setETime] =  useState('')\r\n    const [selectedIds,setSelectedIds] = useState([]);\r\n    const [notShowConfirmBtn,setNotShowConfirmBtn] = useState(false)\r\n    const history= useHistory()\r\n\r\n    const handleTaskStatusChange = (value) => {\r\n        setTaskNumberList([])\r\n        setCurrentRespId('')\r\n        setTaskStatus(value)\r\n        getTaskCodeList(value,responseType,false)\r\n    };\r\n\r\n    const handleResponseChange = (value) => {\r\n        setTaskNumberList([])\r\n        setCurrentRespId('')\r\n        setResponseType(value)\r\n        getTaskCodeList(taskStatus,value,false)\r\n    }\r\n\r\n    const handleTaskNumberChange = (value) => {\r\n        const item = allTaskList.find(item => item.respId === value)\r\n\r\n        const { startTime,endDate,endTime } = calcEndDate(item?.rsTime)\r\n        setStartTime(startTime)\r\n        setSTime(`${endDate} ${startTime}`)\r\n        setETime(item?.reTime)\r\n        setEndTime(endTime)\r\n        setCurrentTime(endDate)\r\n        setCurrentRespId(value)\r\n    }\r\n    \r\n\r\n    const queryAllNodeList = (respId,startTime,endTime,sTime,eTime) => {\r\n        http.post('AIEnergy/demandNodeQuery', {respId}, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            const list = response.data.data || []\r\n            setAllNodeList(list)\r\n            setNodeId(list[0].value)\r\n            setTimeout(() => {\r\n                queryChart(respId,startTime,endTime,list[0].value,sTime,eTime)\r\n            }, 200);\r\n        })\r\n        .catch(function (error) {\r\n            // message.error(`接口错误getTaskCodeList`)\r\n        });\r\n    }\r\n\r\n    const onQuery = (respId,startTime,endTime,sTime,eTime) => {\r\n        queryStrategy(respId)\r\n        setTimeout(() => {\r\n            getDecisionChainList(respId)\r\n        }, 300);\r\n        setTimeout(() => {\r\n            queryAllNodeList(respId,startTime,endTime,sTime,eTime)\r\n        }, 400);\r\n    }   \r\n\r\n    const getTaskCodeList = (status,respType,load=true) => {\r\n        const data = { status, respType };\r\n        http.post('AIEnergy/getTaskCodeList', data, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            const list = response.data.data.content\r\n            setAllTaskList(list)\r\n            const options = list?.map((item) => {\r\n               return {\r\n                  label:item?.taskCode,\r\n                  value:item?.respId\r\n               }\r\n            })\r\n            \r\n            const respId = options[0]?.value\r\n            const {startTime,endDate,endTime } = calcEndDate(list[0]?.rsTime)\r\n            setStartTime(startTime)\r\n            setEndTime(endTime)\r\n            setCurrentTime(endDate)\r\n            setSTime(list[0]?.rsTime)\r\n            setETime(list[0]?.reTime)\r\n            setCurrentRespId(respId)\r\n            setTaskNumberList(options)\r\n            load && respId && onQuery(respId,list[0]?.rsTime,`${endDate} ${endTime}`,list[0]?.rsTime,list[0]?.reTime)\r\n        })\r\n        .catch(function (error) {\r\n            // message.error(`接口错误getTaskCodeList`)\r\n        });\r\n    }\r\n\r\n    const queryStrategy = (respId) => {\r\n        http.post(\"AIEnergy/strategyQuery\", {respId}, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            const list = response.data.data?.map((item,i) => {\r\n               return {\r\n                  key:i+1,\r\n                  nodeName:item?.nodeName,\r\n                  id:item?.id,\r\n                  content:item?.strategyContent,\r\n                  time:item?.timePoint,\r\n                  noHouseholds:item?.noHouseholds,\r\n                  deviceName:item?.deviceName,\r\n                  ensure:item?.ensure,\r\n               }\r\n            })\r\n            const isShowConfirmBtn = response.data.data?.every((item) => item.ensure === 1)\r\n            setNotShowConfirmBtn(isShowConfirmBtn)\r\n            setStrategyList(list)\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误strategyQuery`)\r\n        });\r\n    }\r\n\r\n    const queryLog = (respId) => {\r\n        http.post(\"AIEnergy/strategyLogQuery\", {respId}, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            const list = response.data.data?.map((item) => {\r\n               return {\r\n                  node:mapStrategyName(item?.nodeId),\r\n                  id:item?.id,\r\n                  content:item?.strategyContent,\r\n                  time:item?.timePoint\r\n               }\r\n            })\r\n            setLogList(list)\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误strategyLogQuery`)\r\n        });\r\n    }\r\n\r\n    const queryChart = (respId,startTime,endTime,nodeId,sTime,eTime) => {\r\n        http.post(\"AIEnergy/demandForecastChart\",{\r\n            respId,\r\n            nodeId,\r\n            systemId: \"kongtiao\",\r\n            rsTime : startTime,\r\n            reTime : endTime,\r\n            sTime,\r\n            eTime\r\n        }, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            const tempTimerList = response.data.data?.map((item => {\r\n                return {\r\n                    value:item?.timeStamp,\r\n                    textStyle: {\r\n                        fontSize: 8,\r\n                        color: '#8F959E'\r\n                    }\r\n                }\r\n            }))\r\n\r\n            const tempColorTimerList = response.data.data?.map((item => {\r\n                return {\r\n                    value:item?.timeStamp,\r\n                    textStyle: {\r\n                        fontSize: 8,\r\n                        color: item.adjust ? '#0F9D90' : '#8F959E'\r\n                    }\r\n                }\r\n            }))\r\n            setColorTimerList(tempColorTimerList)\r\n\r\n            const tempPredictionList = response.data.data?.map(item => {\r\n                return {\r\n                    value:item?.forecastLoad,\r\n                    itemStyle: {\r\n                        color:'#7CA5CF'\r\n                    }\r\n                }\r\n            })\r\n            const tempRealList = response.data.data?.map(item => {\r\n                return {\r\n                    value:item?.realValue,\r\n                    itemStyle: {\r\n                        color:'#3370FF'\r\n                    }\r\n                }\r\n            })\r\n\r\n            const tempBaselineList = response.data.data?.map((item => {\r\n                return item?.baselineLoadValue\r\n            }))\r\n\r\n            const tempBottomList = response.data.data?.map(((item,i) => {\r\n               if(item?.adjust){\r\n                  return {\r\n                     value : item?.forecastLoadAfterRegulation ? item?.forecastLoadAfterRegulation : [i,0,0],\r\n                     itemStyle:{\r\n                        color:'#3370FF'\r\n                     }\r\n                  }\r\n               }else{\r\n                  return {\r\n                    value: item?.forecastLoad,\r\n                    itemStyle: {\r\n                       color:'#7CA5CF'\r\n                    }\r\n                }\r\n             }\r\n            }))\r\n\r\n            const tempTopList = response.data.data?.map(((item,i) => {\r\n                if(item.adjust){\r\n                   return {\r\n                      value : item?.forecastRegulationLoad ? item?.forecastRegulationLoad : [i,0,0],\r\n                      itemStyle:{\r\n                         color:'#44D7B6'\r\n                      }\r\n                   }\r\n                }else{\r\n                   return {\r\n                     value: [i,0,0],\r\n                     itemStyle: {\r\n                        color:'#7CA5CF'\r\n                     }\r\n                 }\r\n              }\r\n            }))\r\n\r\n\r\n            setTimerList(tempTimerList)\r\n            setPredictionList(tempPredictionList)\r\n            setBaselineList(tempBaselineList)\r\n            setRealList(tempRealList)\r\n            setTopList(tempTopList)\r\n            setBottomList(tempBottomList)\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误demandForecastChart`)\r\n        });\r\n    }      \r\n\r\n\tconst instance = jsPlumb.getInstance();\r\n\tconst resize = () => {\r\n        // const leftDom = document.getElementsByClassName('demand-forecast_content_left')[0]\r\n        // const rightDom = document.getElementsByClassName('demand-forecast_content_right')[0]\r\n        // rightDom?.setAttribute('style', `height:${leftDom.clientHeight}px`)\r\n\t\tinstance.repaintEverything();\r\n\t};\r\n\tconst clear = () => { \r\n\t\tinstance.deleteEveryConnection();\r\n\t};\r\n    const init = (nodeList,respTask) => {\r\n      \r\n\t};\r\n\r\n    const getDecisionChainList = (respId) => {\r\n        const params = new URLSearchParams();\r\n        params.append(\"respId\", respId);\r\n        http.post(\"AIEnergy/getDecisionChainList\",params)\r\n        .then(function (response) {\r\n            const data = response.data.data\r\n            setNodeList(data?.nodeList)\r\n            setTaskInfo(data?.respTask)\r\n            init(data?.nodeList,data?.respTask)\r\n        })\r\n        .catch(function (error) {\r\n            message.error(`接口错误getDecisionChainList`)\r\n        });\r\n\r\n    }\r\n\r\n    const onQueryChart = (respId,start,end,sTime,eTime) => {    \r\n        if(!currentTime){\r\n            message.error('请输入日期');\r\n            return\r\n        } \r\n        if(!startTime || !endTime){\r\n            message.error('请输入时间');\r\n            return\r\n        }\r\n        if(isTimeDifferenceTwoHours(start,end)){\r\n            message.error('时间范围只允许两个半小时之内');\r\n            return\r\n        }\r\n        // setSpinning(true)\r\n        queryChart(respId,start,end,nodeId,sTime,eTime)\r\n        // setTimeout(() => {\r\n        //     setSpinning(false)\r\n        // }, 1000);\r\n    }\r\n\r\n    const enSure = (ids) => {\r\n        http.post(\"AIEnergy/strategyEnsure\", {ids}, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            message.success('确认成功')\r\n            queryStrategy(currentRespId)\r\n            setSelectedIds([])\r\n        })\r\n        .catch(function (error) {\r\n            message.error('接口错误strategyLogQuery')\r\n        });\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n          title: '节点',\r\n          dataIndex: 'nodeName',\r\n          render: (text) => {\r\n            return (\r\n                <>  \r\n                    {text?.length > 8 ?  \r\n                        <Tooltip placement=\"top\" title={text}>\r\n                            {text?.slice(0,8) + '...'}\r\n                        </Tooltip> : text\r\n                    }\r\n                </>\r\n               \r\n            )\r\n          },\r\n        },\r\n        {\r\n          title: '户号',\r\n          dataIndex: 'noHouseholds',\r\n        },\r\n        {\r\n          title: '时间点',\r\n          dataIndex: 'time',\r\n          render: (text) => formatDate(text),\r\n        },\r\n        {\r\n            title: '策略内容',\r\n            dataIndex: 'content',\r\n        },\r\n        {\r\n            title: '策略状态',\r\n            dataIndex: 'ensure',\r\n            render: (text) => !!text ? '已确认' : '未确认',\r\n        },\r\n        renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ?\r\n        {\r\n\r\n        }:{\r\n            title: '操作',\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (_text, record,) => <>\r\n                {\r\n                    renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' || record?.ensure === 1  ? null: <a className='edit-btn' onClick={() => {\r\n                        enSure([record?.id])\r\n                    }}>确认</a>\r\n                }\r\n                {\r\n                    renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成'  ? null : <a className='edit-btn' onClick={() => {\r\n                        setSelectedStrategyItem(record)\r\n                        setIsStrategyModalOpen(true)\r\n                  }}>编辑</a>\r\n                }\r\n                \r\n            </>\r\n        },\r\n    ];\r\n   \r\n    const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n          console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n          const ids = selectedRows.map((item) => item?.id)\r\n          setSelectedIds(ids)\r\n        },\r\n        getCheckboxProps: (record) => ({\r\n            disabled: record?.ensure === 1,\r\n            defaultChecked:false\r\n        }),\r\n     };\r\n\r\n    useEffect(() => {\r\n        // const leftDom = document.getElementsByClassName('demand-forecast_content_left')[0]\r\n        // const rightDom = document.getElementsByClassName('demand-forecast_content_right')[0]\r\n        // rightDom?.setAttribute('style', `height:${leftDom.clientHeight}px`)\r\n        getTaskCodeList(taskStatus,responseType)\r\n        return () => {\r\n\t\t\tclear();\r\n\t\t\twindow.removeEventListener(\"resize\", resize);\r\n\t\t};\r\n    }, [])\r\n\r\n    return (    \r\n        <>\r\n            {/* <Spin spinning={spinning} fullscreen /> */}\r\n            <div className=\"demand-forecast\">\r\n                <div className=\"demand-forecast_header\">\r\n                    <div className='select-1'>\r\n                        <span className='select-title'>任务状态：</span>\r\n                        <Select\r\n                            style={{ width: 200, height: 32, color: '#fff' }}\r\n                            onChange={handleTaskStatusChange}\r\n                            value={taskStatus}\r\n                            options={[\r\n                                { value: '-1', label: '全部' },\r\n                                { value: '1', label: '待执行' },\r\n                                { value: '2', label: '执行中' },\r\n                                { value: '3', label: '已完成'},\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                    <div className='select-2'>\r\n                        <span className='select-title'>响应类型：</span>\r\n                        <Select\r\n                            style={{ width: 200, height: 32, color: '#fff' }}\r\n                            value={responseType}\r\n                            onChange={handleResponseChange}\r\n                            options={[\r\n                                { value:'-1', label: '全部' },\r\n                                { value: '1', label: '削峰响应' },\r\n                                { value: '2', label: '填谷响应' },\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                    <div className='select-3'>\r\n                        <span className='select-title'>任务编号：</span>\r\n                        <Select\r\n                            style={{ width: 200, height: 32, color: '#fff' }}\r\n                            options={taskNumberList}\r\n                            value={currentRespId}\r\n                            onChange={handleTaskNumberChange}\r\n                        />\r\n                    </div>\r\n                    <Button type=\"Button\" className='demand-forecast_header_btn' onClick={() => onQuery(currentRespId,currentTime + ' ' + startTime,currentTime + ' ' + endTime,sTime,eTime)}>查询</Button>\r\n                </div>\r\n                <div className=\"demand-forecast_content\">\r\n                    <div className={classNames('demand-forecast_content_left')}>\r\n                    <div className='demand-forecast_content_left_header'>\r\n                        {\r\n                            currentTime ? \r\n                            <DatePicker \r\n                                format='YYYY-MM-DD' \r\n                                allowClear={false} \r\n                                defaultValue={dayjs(currentTime, 'YYYY-MM-DD')} \r\n                                value={dayjs(currentTime, 'YYYY-MM-DD')} \r\n                                style={{width:'150px',marginRight:'10px'}} \r\n                                onChange={(date, dateString) => {\r\n                                setCurrentTime(dateString)\r\n                                }}\r\n                            />:\r\n                            <DatePicker \r\n                                format='YYYY-MM-DD' \r\n                                allowClear={false} \r\n                                style={{width:'150px',marginRight:'10px'}} \r\n                                onChange={(date, dateString) => {\r\n                                    setCurrentTime(dateString)\r\n                                }}\r\n                            />\r\n                        }\r\n                        \r\n                        <RangePicker \r\n                            format='HH:mm'\r\n                            style={{width:'150px',marginRight:'5px'}}\r\n                            defaultValue={[startTime && dayjs(startTime, 'HH:mm'),endTime && dayjs(endTime, 'HH:mm')]} \r\n                            value={[startTime && dayjs(startTime, 'HH:mm'),endTime && dayjs(endTime, 'HH:mm')]}\r\n                            placeholder={['','']}\r\n                            onChange={(value) => {\r\n                                if (value && value.length === 2) {\r\n                                    const startTimeStr = value[0]?.format('HH:mm')\r\n                                    const endTimeStr = value[1]?.format('HH:mm')\r\n                                    setStartTime(startTimeStr);\r\n                                    setEndTime(endTimeStr);\r\n                                } else {\r\n                                    setStartTime(null);\r\n                                    setEndTime(null);\r\n                                }\r\n                            }}\r\n                            minuteStep={15}\r\n                        />\r\n                        <Select\r\n                            style={{ width: 150, height: 32, marginLeft: 5, color: '#fff', }}\r\n                            // defaultValue={allNodeList[0]?.value}\r\n                            value={nodeId}\r\n                            options={allNodeList}\r\n                            onChange={(value) => {\r\n                                setNodeId(value)\r\n                            }}\r\n                        />\r\n                        <Button type=\"Button\" className='left-query-btn' style={{width:'63px'}} onClick={() => onQueryChart(currentRespId,currentTime + ' ' + startTime,currentTime + ' ' + endTime,sTime,eTime)}>查询</Button>\r\n                        </div>\r\n                        <div className='demand-forecast_content_left_content'>\r\n                            <div className='chart-01-wrap'>\r\n                                <div className='chart-wrap'>\r\n                                    <i className='chart-icon' />\r\n                                    <span className='chart-title'>基础负荷预测能量块</span>\r\n                                </div>\r\n                                <Chart01 timerList={colorTimerList} baselineList={baselineList} predictionList={predictionList}/>\r\n                            </div>\r\n                            <div className='chart-02-wrap'>\r\n                                <div className='chart-wrap'>\r\n                                    <i className='chart-icon' />\r\n                                    <span className='chart-title'>基于需求响应策略的负荷调节能量块</span>\r\n                                </div>\r\n                                <Chart02 timerList={colorTimerList} baselineList={baselineList} topList={topList} bottomList={bottomList} predictionList={predictionList}/>\r\n                            </div>\r\n                            <div className='chart-03-wrap'>\r\n                                <div className='chart-wrap'>\r\n                                    <i className='chart-icon' />\r\n                                    <span className='chart-title'>实际负荷能量块</span>\r\n                                </div>\r\n                                <Chart03 timerList={colorTimerList} realList={realList} baselineList={baselineList}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='demand-forecast_content_right'>\r\n                        <>\r\n                            <div className='demand-forecast_content_right_header'>\r\n                                <div className='title-wrapper'>\r\n                                    <i className='demand-forecast-dots' /> \r\n                                    <span className='demand-forecast-title'>任务</span>\r\n                                </div>\r\n                                {/* <i className='expand-icon' onClick={() => {\r\n                                    history.push({\r\n                                        pathname: \"/AllNodePage\",\r\n                                        state:{ respId: currentRespId }\r\n                                    });\r\n                                }} /> */}\r\n                            </div>\r\n                            <div className='demand-forecast_content_right_content'>\r\n                                {/* <div className='vertical-dashed-line-1'></div>\r\n                                <div className='vertical-dashed-line-2'></div>      */}\r\n                                <div className='right-top-wrapper'>\r\n                                    <div className='right-top-wrapper-left'>\r\n                                        <div className='left-img'></div>\r\n                                        <div className='left-img-text'>需求响应平台</div>\r\n                                        <div className='right-top-title-wrapper'>\r\n                                            <i className='right-top-title-icon'></i>\r\n                                            <span className='right-top-title'>1-任务</span>\r\n                                        </div>            \r\n                                        <div className='left-text-wrap'>\r\n                                            <p className='left-text'>响应时段：{taskInfo?.rsTime}-{taskInfo?.reTime?.split(' ')[1]}</p>\r\n                                            <p className='left-text'>负荷需求(kW)：{taskInfo?.respLoad ? calcNum(taskInfo?.respLoad) : '-'}</p>\r\n                                            {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已出清' || \r\n                                            renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || \r\n                                            renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ? \r\n                                            <p className='left-text'>出清负荷(kW)：{calcNum(taskInfo?.declareLoad - renderDeclareLoad(nodeList?.slice(0,3)))}</p> : null\r\n                                        }\r\n                                            <p className='left-text'>响应类型：{renderResponseType(taskInfo?.respType)}</p>\r\n                                            <p className='left-text'>响应级别：{ taskInfo?.respLevel ? renderResponseLevel(taskInfo?.respLevel) : '-'}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='right-top-wrapper-right'>\r\n                                        <div className='right-img'></div>\r\n                                        <span className='right-img-text' id='node-top'>能源大模型</span>\r\n                                        <div className='right-top-title-wrapper'>\r\n                                            <i className='right-top-title-icon-01'></i>\r\n                                            <span className='right-top-title'>4-生成</span>\r\n                                        </div>\r\n                                        <div className={classNames('right-text-wrap')}>\r\n                                            <p className='other-right-text'>需求响应状态：{renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)}</p>\r\n                                            <p className='other-right-text'>调节负荷(kW)：{renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '待申报' ? 0 : calcNum(taskInfo?.adjustLoad - renderAdjustLoad(nodeList?.slice(0,3)))}</p>\r\n                                            <p className='other-right-text'>申报负荷(kW)：{renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '待申报' ? 0 : calcNum(taskInfo?.declareLoad - renderDeclareLoad(nodeList?.slice(0,3)))}</p>\r\n                                            {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '待申报' ? null :<p className='other-right-text'>预测负荷(kW)：{calcNum(taskInfo?.forecastLoad)}</p>}\r\n                                            {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' ? <>\r\n                                                <p className='other-right-text'>实际负荷(kW)：{calcNum(taskInfo?.nowLoad)}</p>\r\n                                                <p className='other-right-text'>基线负荷(kW)：{calcNum(taskInfo?.baseLoad)}</p>\r\n                                            </>:null}\r\n                                            {renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ? <>\r\n                                                <p className='other-right-text'>响应负荷(kW)：{calcNum(taskInfo?.actualLoad)}</p>\r\n                                                <p className='other-right-text'>响应电量(kWh)：{calcNum(taskInfo?.actualPower)}</p>\r\n                                                <p className='other-right-text'>预估收益（元）：{calcNum(taskInfo?.profit)}元</p>\r\n                                            </>:null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='right-center-wrapper'>\r\n                                    <div className='right-center-title-wrapper'>\r\n                                        <i className='right-center-icon'></i>\r\n                                        <span className='right-center-title'>\r\n                                            2-分解\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className='dots-wrapper'>\r\n                                        {\r\n                                            nodeList?.slice(0,3)?.map((item,i) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        <div className='dots-1'>\r\n                                                            <div className='dots-1-header' id={`node-item-${i}`}>\r\n                                                                <div className={classNames('round',{'online-status':item?.online})}></div>\r\n                                                                <Tooltip placement=\"top\" title={item.nodeName} color='#38373F'>\r\n                                                                        <span className='dots-1-header-text'>{item?.nodeName}</span>\r\n                                                                </Tooltip>\r\n                                                            </div>\r\n                                                            <div className='dots1-content'>\r\n                                                                <p className='dots1-text'>状态：{renderNodeStatus(item?.drsStatus) || '-'}</p>\r\n                                                                <>\r\n                                                                        <p className='dots1-text'>申报负荷(kW)：{renderNodeStatus(item?.drsStatus) ==='待申报' ? 0 : calcNum(item?.declareLoad)}</p>\r\n                                                                    <p className='dots1-text'>调节负荷(kW)：{renderNodeStatus(item?.drsStatus) ==='待申报' ? 0 : calcNum(item?.adjustLoad)}</p>\r\n                                                                    <p className='dots1-text'>预测负荷(kW)：{calcNum(item?.forecastLoad)}</p>\r\n                                                                </>\r\n                                                                {\r\n                                                                    item?.drsStatus === 24 ? \r\n                                                                    <>\r\n                                                                        <p className='dots1-text'>实际负荷(kW)：{calcNum(item?.nowLoad)}</p>\r\n                                                                        <p className='dots1-text'>基线负荷(kW)：{calcNum(item?.baseLoad)}</p>\r\n                                                                    </> : null\r\n                                                                }\r\n                                                                {\r\n                                                                    item?.drsStatus === 25 ? \r\n                                                                    <>\r\n                                                                        <p className='dots1-text'>响应负荷(kW)：{calcNum(item?.responseLoad)}</p>\r\n                                                                        <p className='dots1-text'>响应电量(kWh)：{calcNum(item?.realTimeLoad)}</p>\r\n                                                                        <p className='dots1-text'>预估收益（元）：{calcNum(item?.profit)}元</p>\r\n                                                                    </> : null\r\n                                                                }\r\n                                                                \r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </>             \r\n                                                )\r\n                                            }) \r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='right-bottom-wrapper'>\r\n                                    <div className='right-bottom-title-wrapper'>\r\n                                       <div className='right-bottom-title-wrapper-right'>\r\n                                            <i className='right-bottom-icon'></i>\r\n                                            <span className='right-center-title'>\r\n                                                3-策略\r\n                                            </span>\r\n                                       </div>\r\n                                        {\r\n                                            renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' || notShowConfirmBtn ? null : <Button className='confirm-btn' disabled={selectedIds.length === 0} onClick={() => enSure(selectedIds)}>批量确认</Button>\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                    <div className='strategy-wrap'>\r\n                                        {/* <div className='strategy-title-wrap'>\r\n                                            <div className='strategy-title'>\r\n                                                <span className='strategy-wrap-title active'>策略</span>\r\n                                                <i className='line' />\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className='table-wrap'>\r\n                                            <div className='odd-rows first-line'>\r\n                                                <span className='one-arrange'>节点</span>\r\n                                                <span className='two-arrange'>户号</span>\r\n                                                <span className='three-arrange'>时间点</span>\r\n                                                <span className='three-arrange'>策略内容</span>\r\n                                                <span className='four-arrange' style={{display:renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ? 'none':'block'}}>操作</span>\r\n                                            </div>\r\n                                            {\r\n                                                strategyList?.map((item,i) => {\r\n                                                    return (\r\n                                                        <div key={i} className={classNames(i % 2 === 0 ? 'even-rows':'odd-rows')}>\r\n                                                            <Tooltip placement=\"top\" title={item.nodeName} color='#38373F'>\r\n                                                                <span className='one-arrange'>{item.nodeName}</span>\r\n                                                            </Tooltip>\r\n                                                            <Tooltip placement=\"top\" title={item.noHouseholds} color='#38373F'>\r\n                                                                <span className='two-arrange'>{item.noHouseholds}</span>\r\n                                                            </Tooltip>\r\n                                                            <span className='three-arrange'>{formatDate(item.time)}</span>\r\n                                                            <Tooltip placement=\"top\" title={item.content} color='#38373F'>\r\n                                                                <span className='three-arrange'>{item.content}</span>\r\n                                                            </Tooltip>\r\n                                                            <span className='four-arrange' style={{display:renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' ? 'none':'block'}} onClick={(e) => {\r\n                                                                setSelectedStrategyItem(item)\r\n                                                                setIsStrategyModalOpen(true)\r\n                                                            }}>修改</span>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div> */}\r\n                                        <Table\r\n                                            pagination={false}\r\n                                            rowSelection={renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '执行中' || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus) === '已完成' || notShowConfirmBtn ? undefined:{\r\n                                                type: 'checkbox',\r\n                                                ...rowSelection,\r\n                                            }}\r\n                                            columns={columns}\r\n                                            dataSource={strategyList}\r\n                                        />\r\n                                     </div>\r\n                                </div>\r\n                            </div>\r\n          \r\n                                {/* <div className='demand-forecast-right-center'>\r\n                                    {/* <div className={classNames('center-img-top', \r\n                                                    { 'overturn':renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"待出清\" || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"执行中\" },\r\n                                                    { 'completed':renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"已完成\" })}>\r\n\r\n                                    </div> */}\r\n\r\n                                {/* </div> */} \r\n\r\n                                {/* <div className={`demand-forecast-right-bottom-${nodeList?.length}`}>\r\n                                    { nodeList?.slice(0,3)?.map((item,i) => {\r\n                                        return <div  className={classNames(`bottom-gif-${i+1}`, \r\n                                        { 'overturn':renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"待申报\" || renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"执行中\" },\r\n                                        { 'completed':renderResponseStatus(taskInfo?.dstatus,taskInfo?.declareStatus)===\"已完成\" })} ></div>\r\n                                    })}\r\n                                </div>  */}\r\n                        </>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <CommonModal setIsModalOpen={setIsModalOpen} isModalOpen={isModalOpen} nodeList={nodeList} taskInfo={taskInfo}/>\r\n            {\r\n                isStrategyModalOpen ?       \r\n                <StrategyModal \r\n                    setIsStrategyModalOpen={setIsStrategyModalOpen} \r\n                    selectedStrategyItem={selectedStrategyItem}\r\n                    queryStrategy={() => queryStrategy(currentRespId)}\r\n                    getDecisionChainList={() => getDecisionChainList(currentRespId)}\r\n                    onQueryChart={() => onQueryChart(currentRespId,currentTime + ' ' + startTime,currentTime + ' ' + endTime,sTime,eTime)}\r\n                /> : null\r\n            }\r\n      \r\n        </> \r\n    )\r\n\r\n}\r\nexport default DemandForecast\r\n\r\n","export const mapStrategyName = (key) => {\r\n    const obj = {\r\n        '3da72e052a0b48759b0f4633df42235a': '深圳某工业设备新材料股份有限公司',\r\n        '176c0991f24e30c2b25a9dbf1185b7b9': '深圳泰伦广场A座',\r\n        '5eb413037ba16ea6108c12e0d6353be3': '深圳泰伦广场B座'\r\n    }\r\n    return obj[key]\r\n}\r\n\r\n\r\nexport const formatDate = (objDate) => {\r\n    const timestamp = new Date(objDate);\r\n    const year = timestamp.getFullYear();\r\n    const month = (timestamp.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 because getMonth() returns zero-based month\r\n    const day = timestamp.getDate().toString().padStart(2, '0');\r\n    const hours = timestamp.getHours().toString().padStart(2, '0');\r\n    const minutes = timestamp.getMinutes().toString().padStart(2, '0');\r\n    const formattedDate = `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    return formattedDate;\r\n}\r\n\r\n\r\nexport const isTimeDifferenceTwoHours = (timeStr1, timeStr2) => {\r\n    const date1 = new Date(timeStr1);\r\n    const date2 = new Date(timeStr2);\r\n    const diff = Math.abs(date2.getTime() - date1.getTime());\r\n    return diff > 2.5 * 60 * 60 * 1000; // 2 hours in milliseconds\r\n}\r\n\r\nexport const renderResponseType = (type) => {\r\n    if (type === 1) {\r\n        return '削峰响应'\r\n    } else if (type === 2) {\r\n        return '填谷响应'\r\n    } else {\r\n        return '-'\r\n    }\r\n}\r\n\r\nexport const renderResponseLevel = (type) => {\r\n    if (type === 1) {\r\n        return '日前响应'\r\n    } else if (type === 2) {\r\n        return '小时响应'\r\n    } else if (type === 3) {\r\n        return '分钟响应'\r\n    } else if (type === 4) {\r\n        return '秒级响应'\r\n    }\r\n}\r\n\r\nexport const renderResponseStatus = (dstatus, declareStatus) => {\r\n    if(!declareStatus){\r\n        if(dstatus === 1){\r\n            return '待申报'\r\n        }\r\n        if(dstatus === 2){\r\n            return '执行中'\r\n        }\r\n        if(dstatus === 3){\r\n            return '已完成'\r\n        }\r\n        if(dstatus === 4 || dstatus === 0){\r\n            return '不参加'\r\n        }\r\n    }\r\n\r\n    if(!dstatus){\r\n        if(declareStatus === 1){\r\n            return '待申报'\r\n        }\r\n        if(declareStatus === 2){\r\n            return '待出清'\r\n        }\r\n        if(declareStatus === 3){\r\n            return '已出清'\r\n        }  \r\n    }\r\n\r\n    if(declareStatus){\r\n        if(declareStatus === 1 && dstatus === 1){\r\n            return '待申报'\r\n        }\r\n        if(declareStatus === 2 && dstatus === 1){\r\n            return '待出清'\r\n        }\r\n        if(declareStatus === 3 && dstatus === 1){\r\n            return '已出清'\r\n        }\r\n        if(declareStatus === 3 && dstatus === 2){\r\n            return '执行中'\r\n        }\r\n        if(declareStatus === 3 && dstatus === 3){\r\n            return '已完成'\r\n        }\r\n        if(dstatus === 4 || dstatus === 0){\r\n            return '不参加'\r\n        }\r\n    }\r\n    \r\n    return '不参加'\r\n}\r\n\r\nexport const renderNodeStatus = (status) => {\r\n    switch (status) {\r\n        case 11:\r\n            return '待申报'\r\n        case 12:\r\n            return '待申报'\r\n        case 15:\r\n            return '不参加'\r\n        case 21:\r\n            return '待出清'\r\n        case 22:\r\n            return '已出清'\r\n        case 24:\r\n            return '执行中'\r\n        case 25:\r\n            return '已完成'\r\n        default:\r\n            return '-'\r\n    }\r\n\r\n}\r\n\r\n\r\n// 示例用法\r\n\r\nexport const calcEndDate = (date) => {\r\n    const timestamp = new Date(date);\r\n    const year = timestamp.getFullYear();\r\n    const month = (timestamp.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 because getMonth() returns zero-based month\r\n    const day = timestamp.getDate().toString().padStart(2, '0');\r\n    let hours = ''\r\n    let minutes = ''\r\n    if (Number(timestamp.getHours().toString()) >= 22) {\r\n        hours = '23'\r\n        minutes = '45'\r\n    } else {\r\n        const startDate = new Date(date);\r\n        startDate.setTime(startDate.getTime() + (2.5 * 60 * 60 * 1000));\r\n        hours = (Number(startDate.getHours().toString())).toString().padStart(2, '0');\r\n        minutes = startDate.getMinutes().toString().padStart(2, '0');\r\n    }\r\n    return {\r\n        startTime: date.split(' ')[1],\r\n        endDate: `${year}-${month}-${day}`,\r\n        endTime: `${hours}:${minutes}`\r\n    }\r\n}   \r\n\r\n\r\nexport const calcNum = (num) => {\r\n    if(isNaN(num)){\r\n        return 0\r\n    }\r\n    return num ? Math.round(num*100) / 100 : 0\r\n}\r\n\r\nexport const renderDeclareLoad = (nodeList) => {\r\n    let declareLoad = 0\r\n    if(nodeList && nodeList?.length > 0){\r\n        nodeList.forEach((item) => {\r\n            if(renderNodeStatus(item?.drsStatus) ==='待申报'){\r\n                declareLoad += Number(item?.declareLoad)\r\n            } \r\n        })\r\n    }\r\n    return declareLoad\r\n}\r\n\r\nexport const renderAdjustLoad = (nodeList) => {\r\n    let adjustLoad = 0\r\n    if(nodeList && nodeList?.length > 0){\r\n        nodeList.forEach((item) => {\r\n            if(renderNodeStatus(item?.drsStatus) ==='待申报'){\r\n                adjustLoad += Number(item?.adjustLoad)\r\n            } \r\n        })\r\n    }\r\n    \r\n    return adjustLoad\r\n}"],"names":["DatePicker","Input","props","setIsTipsModalOpen","isTipsModalOpen","handleCancel","className","visible","footer","title","onCancel","onClick","isModalOpen","setIsModalOpen","taskInfo","nodeList","useState","closable","rsDate","respLoad","renderResponseType","respType","renderResponseLevel","respLevel","declareLoad","adjustLoad","forecastLoad","map","item","i","classNames","online","nodeName","renderNodeStatus","drsStatus","deviceRatedLoad","reality","income","setIsStrategyModalOpen","selectedStrategyItem","queryStrategy","getDecisionChainList","onQueryChart","id","noHouseholds","time","deviceName","content","substring","length","temperature","setTemperature","formatDate","placement","join","color","value","onChange","e","target","style","width","height","message","http","strategyContentBefore","strategyContent","headers","then","response","setTimeout","catch","error","timerList","baselineList","predictionList","useEffect","option","chartDom","document","getElementById","myChart","echarts","init","series","push","stack","shading","emphasis","label","show","type","barSize","data","lineStyle","tooltip","trigger","triggerOn","enterable","formatter","params","dataIndex","timer","redLine","prediction","backgroundColor","borderColor","xAxis3D","name","nameTextStyle","fontSize","axisLine","interval","axisLabel","textStyle","yAxis3D","zAxis3D","nameGap","grid3D","top","viewControl","beta","alpha","distance","splitLine","axisPointer","borderWidth","boxWidth","boxDepth","boxHeight","light","main","intensity","shadow","ambient","itemStyle","setOption","dispatchAction","view","rotate","margin","topList","bottomList","console","log","bottom","normalReturn","specialReturn","realList","real","dayjs","weekday","localeData","RangePicker","TimePicker","isStrategyModalOpen","currentRespId","setCurrentRespId","taskNumberList","setTaskNumberList","taskStatus","setTaskStatus","responseType","setResponseType","strategyList","setStrategyList","setSelectedStrategyItem","setTimerList","colorTimerList","setColorTimerList","setBaselineList","setPredictionList","setRealList","setBottomList","setTopList","startTime","setStartTime","endTime","setEndTime","currentTime","setCurrentTime","allTaskList","setAllTaskList","nodeId","setNodeId","setNodeList","setTaskInfo","allNodeList","setAllNodeList","sTime","setSTime","eTime","setETime","selectedIds","setSelectedIds","notShowConfirmBtn","setNotShowConfirmBtn","onQuery","useHistory","respId","list","queryChart","queryAllNodeList","getTaskCodeList","status","load","options","taskCode","calcEndDate","rsTime","endDate","reTime","key","timePoint","ensure","isShowConfirmBtn","every","systemId","tempTimerList","timeStamp","tempColorTimerList","adjust","tempPredictionList","tempRealList","realValue","tempBaselineList","baselineLoadValue","tempBottomList","forecastLoadAfterRegulation","tempTopList","forecastRegulationLoad","instance","jsPlumb","resize","repaintEverything","URLSearchParams","append","respTask","start","end","isTimeDifferenceTwoHours","enSure","ids","columns","render","text","slice","renderResponseStatus","dstatus","declareStatus","_text","record","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","disabled","defaultChecked","deleteEveryConnection","window","removeEventListener","find","format","allowClear","defaultValue","marginRight","date","dateString","placeholder","startTimeStr","endTimeStr","minuteStep","marginLeft","split","calcNum","renderDeclareLoad","renderAdjustLoad","nowLoad","baseLoad","actualLoad","actualPower","profit","responseLoad","realTimeLoad","pagination","undefined","dataSource","mapStrategyName","objDate","timestamp","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","timeStr1","timeStr2","date1","date2","Math","abs","getTime","Number","startDate","setTime","num","isNaN","round","forEach"],"sourceRoot":""}