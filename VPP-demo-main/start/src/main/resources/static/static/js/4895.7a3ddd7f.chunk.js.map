{"version":3,"file":"static/js/4895.7a3ddd7f.chunk.js","mappings":"mSAKAA,EAAAA,UAAAA,UAAAA,KAAiCC,IAEjC,IAAQC,EAAWC,EAAAA,EAAAA,OAoSnB,EAnSqB,WACpB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAAsBJ,EAAAA,EAAAA,UAAS,GAA/B,eAAOK,EAAP,KACA,GADA,MACgCL,EAAAA,EAAAA,UAAS,KAAzC,eAAOM,EAAP,KACA,GADA,MAC4BN,EAAAA,EAAAA,UAAS,KAArC,eAAOO,EAAP,KACA,GADA,MACwBP,EAAAA,EAAAA,UAAS,IAAjC,eAAOQ,EAAP,KAAaC,EAAb,KACA,GAA0BT,EAAAA,EAAAA,UAAS,IAAnC,eAAOU,EAAP,KAAcC,EAAd,KACA,GAA8BX,EAAAA,EAAAA,WAAS,GAAvC,eAAOY,EAAP,KAAgBC,EAAhB,KACA,EAAiBC,EAAAA,EAAAA,UAAVC,GAAP,eAIMC,EAAU,WACfH,GAAW,GACX,IAAMI,EAAa,IAAIC,gBACvBD,EAAWE,OAAO,SAASX,GAC3BS,EAAWE,OAAO,WAAY,IAC9BC,EAAAA,EAAAA,KAAU,4EAA4EH,GAAYI,MAAK,SAAAC,GACtGC,QAAQC,IAAIF,GACO,KAAhBA,EAAIG,KAAKC,OACXxB,EAAcoB,EAAIG,KAAKA,KAAKE,SAC5BhB,EAASW,EAAIG,KAAKA,KAAKG,eACvBf,GAAW,OAEVgB,OAAM,SAAAC,GACRP,QAAQC,IAAIM,QAoHdC,EAAAA,EAAAA,YAAU,WACTf,MACC,CAACR,IAsCH,OAEC,gBAAKwB,UAAU,eAAf,UACA,iBAAKA,UAAU,gBAAf,WACC,SAAC,IAAD,CACCA,UAAU,QACVC,QA3CY,CAEd,CACCC,MAAO,2BACPC,UAAW,YACXC,IAAK,aAEN,CACCF,MAAO,2BACPC,UAAW,WACXC,IAAK,YAEN,CACCF,MAAO,2BACPC,UAAW,eACXC,IAAK,eACLC,OAAQ,SAACC,EAAKC,EAAOC,EAAEC,GACtB,OAAS,GAANH,EACK,eACO,GAANA,EACD,oBADF,IAWR,CACCJ,MAAO,eACPC,UAAW,YACXC,IAAK,cAWJnC,WAAYA,EACZyC,OAAQ,SAAAH,GACP,OAAOA,EAAOI,UAEf/B,QAASA,EAETgC,WACC,CACClC,MAAOA,EACPmC,eAAgB,EAChBC,gBAAiB,GACjBC,iBAAgB,EAChBC,SA/DmB,SAACxC,GACxBe,QAAQC,IAAIhB,GACZC,EAAQD,QAiEL,SAAC,IAAD,CAAO0B,MAAY,GAAL7B,EAAO,2BAAO,2BAAQ4C,SA3EpB,WACnB7C,GAAkB,IA0E6C8C,QAAS/C,EACtEgD,OAAQ,KADP,UAGD,UAAC,IAAD,CACCC,IAAI,SACFC,KAAK,QACLC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,cAAe,CAAEC,UAAU,GAC3BC,SA3IW,SAACC,GACjBrC,QAAQC,IAAI,WAAYoC,GACxB,IAAIC,EAAYhE,GAAAA,CAAI+D,EAAOE,UACnB,GAALzD,EACFe,EAAAA,EAAAA,KAAU,gDAAgD,CACzD,WAAc,GACd,OAAU,GACV,SAAYwC,EAAOG,OACnB,UAAYH,EAAOI,UACnB,OAAU,GACV,SAAYJ,EAAOK,SACnB,aAAgBJ,IACdxC,MAAK,SAAAC,GACPC,QAAQC,IAAIF,GACO,KAAhBA,EAAIG,KAAKC,MACXwC,EAAAA,GAAAA,QAAgB,4BAChB9D,GAAkB,GAClBY,IACAD,EAAOoD,eAEPD,EAAAA,GAAAA,QAAgB5C,EAAIG,KAAK2C,QAExBvC,OAAM,SAAAC,OAGI,GAALzB,GACRe,EAAAA,EAAAA,KAAU,uDAAuD,CAChE,WAAc,GACd,OAAU,GACV,SAAYwC,EAAOG,OACnB,UAAYH,EAAOI,UACnB,OAAUzD,EACV,SAAYqD,EAAOK,SACnB,aAAgBJ,IACdxC,MAAK,SAAAC,GACPC,QAAQC,IAAIF,GACO,KAAhBA,EAAIG,KAAKC,MACXwC,EAAAA,GAAAA,QAAgB,4BAChBlD,IACAZ,GAAkB,GAClBW,EAAOoD,eAEPD,EAAAA,GAAAA,QAAgB5C,EAAIG,KAAK2C,QAExBvC,OAAM,SAAAC,QAgGLuC,eAxFiB,SAACC,GACvB/C,QAAQC,IAAI,UAAW8C,IAwFlBC,aAAa,MARhB,WAUG,SAAC,SAAD,CACDC,MAAM,qBACNnB,KAAK,WACLoB,MAAO,CAAC,CAAEC,UAAU,EAAMR,QAAS,yCAHlC,UAKD,SAAC,IAAD,OAGA,SAAC,SAAD,CACCM,MAAM,eACNnB,KAAK,WACLoB,MAAO,CAAC,CAAEC,UAAU,EAAMR,QAAS,mCAHpC,UAKA,SAAC,aAAD,OAEA,SAAC,SAAD,CAAWM,MAAM,2BAAOnB,KAAK,MAAMoB,MAAO,CACzC,CAACC,UAAU,EAAKR,QAAS,kCACzB,gBAAES,EAAF,EAAEA,cAAF,MAAoB,CACnBC,UADmB,SACTC,EAAKC,GACd,OAAIA,GAASH,EAAc,cAAgBG,EAGpCC,QAAQC,OAAO,0DAFdD,QAAQE,cALnB,UAaA,SAAC,aAAD,CAAgBC,YAAY,sCAE5B,SAAC,SAAD,CAAW7B,KAAK,SAASmB,MAAM,eAAKC,MAAO,CAAC,CAAEC,UAAU,EAAMR,QAAS,uBAAvE,UACC,SAAC,IAAD,CACCiB,YAAY,qBACZC,YAAU,EAFX,SAKE9E,EAAS+E,QAAQ/E,EAASgF,KAAI,SAAChE,EAAIiE,GAClC,OAAO,SAACzF,EAAD,CAA0BgF,MAAOxD,EAAIkE,QAArC,SAA+ClE,EAAImE,aAAtCnE,EAAIkE,iBAM5B,SAAC,SAAD,CACEhB,MAAM,eACNnB,KAAK,YACLoB,MAAO,CAAC,CACTD,MAAM,eACNkB,QAAS,IAAIC,OAAO,gGACpBzB,QAAS,2DANV,UAUE,SAAC,IAAD,OAED,UAAC,SAAD,CAAWV,WAAY,CAAEoC,OAAQ,EAAGrC,KAAM,IAA1C,WACA,SAAC,KAAD,CAAQsC,SAAS,SAASC,MAAO,CAACC,YAAY,IAAKC,QA7I1C,WACdjF,EAAOoD,cACP/D,GAAkB,IA2Ib,2BAGD,SAAC,KAAD,CAAQ6F,KAAK,UAAUJ,SAAS,SAAhC","sources":["views/system/model/storage_model/index.js"],"sourcesContent":["import React, { useEffect,useState } from 'react';\nimport { Table ,Space,Form,Button, Checkbox, Input,Modal,Select ,message} from 'antd';\nimport http from '../../../../server/server.js'\r\nimport './index.css'\nimport md5 from 'js-md5';\nReact.Component.prototype.$md5 = md5;\n\nconst { Option } = Select;\nconst Storage_model =() =>{\n\tconst [dataSource, setDataSource] = useState([]);\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [add, setAdd] = useState(0);\r\n\tconst [RoleType, setRoleType] = useState([]);\r\n\tconst [userId, setUserId] = useState('');\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [total, setTotal] = useState('');\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [myForm] = Form.useForm();\n\t\r\n\t\n\t// 列表\n\tconst parameter=() =>{\r\n\t\tsetLoading(true)\r\n\t\tconst paramsList = new URLSearchParams() // 切记不要let paramsList = {type: 1, userList: userList}\r\n\t\tparamsList.append('number',page) // 参数1为参数名，参数2为参数内容\r\n\t\tparamsList.append('pageSize', 10)\n\t\thttp.post('system_management/energy_model/model_parameter/modelParameterListPageable',paramsList).then(res =>{\n\t\t\tconsole.log(res)\n\t\t\tif(res.data.code ==200){\r\n\t\t\t\tsetDataSource(res.data.data.content);\r\n\t\t\t\tsetTotal(res.data.data.totalElements);\r\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t}).catch(err =>{\n\t\t\tconsole.log(err)\n\t\t})\n\t}\n\t\n\t\n\t// 获取类型\n\tconst allRoleTypes=() =>{\n\t\thttp.post('system_management/system_user/role/allRoleTypes').then(res =>{\n\t\t\tconsole.log(res)\n\t\t\tif(res.data.code ==200){\r\n\t\t\t\tsetRoleType(res.data.data)\n\t\t\t}\n\t\t}).catch(err =>{\n\t\t\tconsole.log(err)\n\t\t})\n\t}\n\tconst edit =(e) =>{\n\t\tconsole.log(e)\r\n\t\tsetIsModalVisible(true);\r\n\t\tsetAdd(1);\r\n\t\tsetUserId(e.userId);\r\n\t\tmyForm.setFieldsValue({\r\n\t\t\tusername: e.userName,\r\n\t\t\tuserEmail: e.userEmail,\r\n\t\t\tgender:e.roleName\r\n\t\t});\n\t}\n\t// const add = () =>{\n\t\t\r\n\t// \tsetIsModalVisible(true);\r\n\t// \tsetAdd(0);\r\n\t// \tallRoleTypes()\n\t// }\n\tconst del =(e) =>{\n\t\tconsole.log(e)\n\t\t\n\t\thttp.post('system_management/system_user/user/deleteSysUser?sysUserId='+e.userId).then(res =>{\n\t\t\tif(res.data.code ==200){\n\t\t\t\tmessage.success('删除成功')\n\t\t\t\tparameter()\n\t\t\t}else{\n\t\t\t\tmessage.warning(res.data.msg)\n\t\t\t}\n\t\t}).catch(err =>{\n\t\t\t\n\t\t})\n\t}\n\t\n\t// 新建用户\n\tconst onFinish = (values) => {\n\t\tconsole.log('Success:', values);\n\t\tlet passwords = md5(values.password)\n\t\tif(add==0){\n\t\t\thttp.post('system_management/system_user/user/addSysUser',{\n\t\t\t\t\"configType\": \"\",\n\t\t\t\t\"roleId\": \"\",\n\t\t\t\t\"roleType\": values.gender,\n\t\t\t\t\"userEmail\":values.userEmail,\n\t\t\t\t\"userId\": \"\",\n\t\t\t\t\"userName\": values.username,\n\t\t\t\t\"userPassword\": passwords\n\t\t\t}).then(res =>{\n\t\t\t\tconsole.log(res)\n\t\t\t\tif(res.data.code ==200){\n\t\t\t\t\tmessage.success('添加成功');\r\n\t\t\t\t\tsetIsModalVisible(false);\n\t\t\t\t\tparameter()\n\t\t\t\t\tmyForm.resetFields();\n\t\t\t\t}else{\n\t\t\t\t\tmessage.warning(res.data.msg)\n\t\t\t\t}\n\t\t\t}).catch(err =>{\n\t\t\t\t\n\t\t\t})\n\t\t}else if(add==1){\n\t\t\thttp.post('system_management/system_user/user/updateSysUserRole',{\n\t\t\t\t\"configType\": \"\",\n\t\t\t\t\"roleId\": \"\",\n\t\t\t\t\"roleType\": values.gender,\n\t\t\t\t\"userEmail\":values.userEmail,\n\t\t\t\t\"userId\": userId,\n\t\t\t\t\"userName\": values.username,\n\t\t\t\t\"userPassword\": passwords\n\t\t\t}).then(res =>{\n\t\t\t\tconsole.log(res)\n\t\t\t\tif(res.data.code ==200){\n\t\t\t\t\tmessage.success('编辑成功')\n\t\t\t\t\tparameter();\r\n\t\t\t\t\tsetIsModalVisible(false);\n\t\t\t\t\tmyForm.resetFields();\n\t\t\t\t}else{\n\t\t\t\t\tmessage.warning(res.data.msg)\n\t\t\t\t}\n\t\t\t}).catch(err =>{\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\t\n\t\t\n\t};\n\t\n\tconst onFinishFailed = (errorInfo: any) => {\n\t\tconsole.log('Failed:', errorInfo);\n\t};\n\tconst handleCancel =() =>{\n\t\tsetIsModalVisible(false);\n\t}\n\tconst onReset =() =>{\n\t\tmyForm.resetFields();\n\t\tsetIsModalVisible(false);\n\t\t\n\t}\r\n\tconst handlePagination =(page) =>{\r\n\t\tconsole.log(page)\r\n\t\tsetPage(page)\r\n\t}\r\n\tuseEffect(() =>{\r\n\t\tparameter()\r\n\t},[page])\n\tconst columns =[\n\n\t\t{\n\t\t\ttitle: '参数名称',\n\t\t\tdataIndex: 'modelName',\n\t\t\tkey: 'modelName',\n\t\t},\n\t\t{\n\t\t\ttitle: '参数键名',\n\t\t\tdataIndex: 'modelKey',\n\t\t\tkey: 'modelKey',\n\t\t},\n\t\t{\n\t\t\ttitle: '参数类型',\n\t\t\tdataIndex: 'modelKeyType',\n\t\t\tkey: 'modelKeyType',\r\n\t\t\trender: (text,record,_,action) =>{\r\n\t\t\t\tif(text==1){\r\n\t\t\t\t\treturn '设备'\r\n\t\t\t\t}else if(text==2){\r\n\t\t\t\t\treturn '点位'\r\n\t\t\t\t}\r\n\t\t\t}\n\t\t},\r\n\t\t// render()\n\t\t// {\n\t\t//     title: '系统内置',\n\t\t//     dataIndex: 'configType',\n\t\t//     key: 'configType',\n\t\t// },\n\t\t{\n\t\t\ttitle: '备注',\n\t\t\tdataIndex: 'modelMark',\n\t\t\tkey: 'modelMark',\n\t\t}\n\t\t\n\t]\n\treturn(\n\t\t\n\t\t<div className=\"allcontented\">\r\n\t\t<div className=\"storage_model\">\n\t\t\t<Table\n\t\t\t\tclassName=\"tabls\"\n\t\t\t\tcolumns={columns}\n\t\t\t\tdataSource={dataSource}\n\t\t\t\trowKey={record =>{\n\t\t\t\t\treturn record.configId\n\t\t\t\t}}\r\n\t\t\t\tloading={loading}\n\t\t\t\t// pagination={false}\r\n\t\t\t\tpagination={\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttotal: total,//数据的总条数\r\n\t\t\t\t\t\tdefaultCurrent: 1,//默认当前的页数\r\n\t\t\t\t\t\tdefaultPageSize: 10,//默认每页的条数\r\n\t\t\t\t\t\tshowSizeChanger:false,\r\n\t\t\t\t\t\tonChange: handlePagination,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\n\t\t\t/>\n\t\t   <Modal title={add==0?'新建用户':'编辑用户'} onCancel={handleCancel} visible={isModalVisible}\n\t\t\t\tfooter={null}\n\t\t\t >\n\t\t\t\t<Form\n\t\t\t\t\tref=\"myForm\"\n\t\t\t\t\t  name=\"basic\"\n\t\t\t\t\t  labelCol={{ span: 8 }}\n\t\t\t\t\t  wrapperCol={{ span: 16 }}\n\t\t\t\t\t  initialValues={{ remember: true }}\n\t\t\t\t\t  onFinish={onFinish}\n\t\t\t\t\t  onFinishFailed={onFinishFailed}\n\t\t\t\t\t  autoComplete=\"off\"\n\t\t\t\t\t>\n\t\t\t\t\t  <Form.Item\n\t\t\t\t\t\tlabel=\"用户名\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\trules={[{ required: true, message: '请输入用户名' }]}\n\t\t\t\t\t  >\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t  </Form.Item>\n\t\t\t\t\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tlabel=\"密码\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\trules={[{ required: true, message: '请输入密码' }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<Input.Password />\n\t\t\t\t\t  </Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"确认密码\" name=\"pw2\" rules={[\n\t\t\t\t\t\t\t{required: true,message: '请输入密码'},\n\t\t\t\t\t\t\t({getFieldValue})=>({\n\t\t\t\t\t\t\t\tvalidator(rule,value){\n\t\t\t\t\t\t\t\t\tif(!value || getFieldValue('password') === value){\n\t\t\t\t\t\t\t\t\t\treturn Promise.resolve()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn Promise.reject(\"两次密码输入不一致\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]}\n\t\t\t\t\t\t\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<Input.Password palceholder=\"请确认密码\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item name=\"gender\" label=\"角色\" rules={[{ required: true ,message: '请选择'}]}>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tplaceholder=\"请选择\"\n\t\t\t\t\t\t\t\tallowClear\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tRoleType.length&&RoleType.map((res,index) =>{\n\t\t\t\t\t\t\t\t\t\treturn <Option key={res.roleKey} value={res.roleKey}>{res.roleKeyDesc}</Option>\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t  label=\"邮箱\"\n\t\t\t\t\t\t  name=\"userEmail\"\r\n\t\t\t\t\t\t  rules={[{\r\n\t\t\t\t\t\t\tlabel:\"邮箱\",\r\n\t\t\t\t\t\t\tpattern: new RegExp(/^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/),\r\n\t\t\t\t\t\t\tmessage: '请输入正确格式邮箱'\r\n\t\t\t\t\t\t  }]}\n\t\t\t\t\t\t  // rules={[{ required: true, message: '' }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t  <Input />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t  <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n\t\t\t\t\t  <Button htmlType=\"button\" style={{marginRight:15}} onClick={onReset}>\n\t\t\t\t\t\t\t\t取消\n\t\t\t\t\t\t\t  </Button>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t  确定\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t  </Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t</Modal>\n\t\t\t  \n\t\t</div>\r\n\t\t</div>\n\t)\n}\n\t\n\n\nexport default Storage_model\n\n\n"],"names":["React","md5","Option","Select","useState","dataSource","setDataSource","isModalVisible","setIsModalVisible","add","RoleType","userId","page","setPage","total","setTotal","loading","setLoading","Form","myForm","parameter","paramsList","URLSearchParams","append","http","then","res","console","log","data","code","content","totalElements","catch","err","useEffect","className","columns","title","dataIndex","key","render","text","record","_","action","rowKey","configId","pagination","defaultCurrent","defaultPageSize","showSizeChanger","onChange","onCancel","visible","footer","ref","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","passwords","password","gender","userEmail","username","message","resetFields","msg","onFinishFailed","errorInfo","autoComplete","label","rules","required","getFieldValue","validator","rule","value","Promise","reject","resolve","palceholder","placeholder","allowClear","length","map","index","roleKey","roleKeyDesc","pattern","RegExp","offset","htmlType","style","marginRight","onClick","type"],"sourceRoot":""}