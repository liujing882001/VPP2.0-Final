# VPP 2.0 虚拟电厂管理系统 - Docker环境配置
# ==================================================

# 应用基础配置
spring.application.name=VirtualPowerPlant
server.port=8080
server.address=0.0.0.0

# 数据库配置
spring.datasource.url=jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:vpp_db}
spring.datasource.username=${DB_USER:vpp_user}
spring.datasource.password=${DB_PASSWORD:vpp_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# 连接池配置
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000

# JPA配置
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Redis配置
spring.redis.host=${REDIS_HOST:redis}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}
spring.redis.database=${REDIS_DATABASE:0}
spring.redis.timeout=30000ms
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=5
spring.redis.jedis.pool.min-idle=1

# Kafka配置
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:vpp-consumer-group}
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO_OFFSET_RESET:earliest}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# 日志配置
logging.level.root=${LOG_LEVEL:INFO}
logging.level.com.example=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.path=${LOG_PATH:/app/logs}
logging.file.name=${LOG_PATH:/app/logs}/vpp-application.log

# 监控配置
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics,prometheus}
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=${MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED:true}

# 文件上传配置
spring.servlet.multipart.max-file-size=${UPLOAD_MAX_FILE_SIZE:100MB}
spring.servlet.multipart.max-request-size=${UPLOAD_MAX_REQUEST_SIZE:100MB}

# 线程池配置
spring.task.execution.pool.core-size=${THREAD_POOL_CORE_SIZE:10}
spring.task.execution.pool.max-size=${THREAD_POOL_MAX_SIZE:50}
spring.task.execution.pool.queue-capacity=${THREAD_POOL_QUEUE_CAPACITY:1000}
spring.task.execution.thread-name-prefix=vpp-task-

# 缓存配置
spring.cache.type=redis
spring.cache.redis.time-to-live=${CACHE_TTL:3600000}
spring.cache.redis.cache-null-values=false

# 安全配置
jwt.secret=${JWT_SECRET:vpp_jwt_secret_key_change_in_production}
jwt.expiration=${SESSION_TIMEOUT:3600}

# CORS配置
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:80}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# 外部服务配置
forest.variables.serviceIp=${FOREST_SERVICE_IP:http://localhost:8080}
external.api.timeout=${EXTERNAL_API_TIMEOUT:30000}

# 阿里云配置
aliyun.accessKeyId=${ALIYUN_ACCESS_KEY_ID:}
aliyun.accessKeySecret=${ALIYUN_ACCESS_KEY_SECRET:}
aliyun.sms.regionId=${ALIYUN_SMS_REGION:cn-hangzhou}
aliyun.sms.signName=${ALIYUN_SMS_SIGN_NAME:虚拟电厂}

# 邮件配置
spring.mail.host=${MAIL_HOST:smtp.163.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# 时区配置
spring.jackson.time-zone=${TZ:Asia/Shanghai}

# Swagger配置
springfox.documentation.swagger.v2.enabled=true
swagger.enable=true

# 压缩配置
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/plain,text/css,application/javascript
server.compression.min-response-size=1024

# XSS防护配置
mica.xss.enabled=true
mica.xss.mode=clear
mica.xss.path-patterns=/**

# Undertow配置
server.undertow.threads.io=16
server.undertow.threads.worker=256
server.undertow.buffer-size=1024
server.undertow.direct-buffers=true

# 健康检查配置
management.health.defaults.enabled=true
management.health.db.enabled=true
management.health.redis.enabled=true
management.health.diskspace.enabled=true 